var contentfulManagement =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// To understand why axios is vendored, check SETUP.md
	var axios = __webpack_require__(1);
	var contentfulManagement = __webpack_require__(91).default;
	module.exports = {
	  createClient: function createClient(params) {
	    return contentfulManagement(axios, params);
	  }
	};

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process, module) {'use strict';

	var _stringify = __webpack_require__(4);

	var _stringify2 = _interopRequireDefault(_stringify);

	var _promise = __webpack_require__(7);

	var _promise2 = _interopRequireDefault(_promise);

	var _typeof2 = __webpack_require__(74);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	/* axios v0.9.1 | (c) 2016 by Matt Zabriskie */
	(function webpackUniversalModuleDefinition(root, factory) {
		if (( false ? 'undefined' : (0, _typeof3.default)(exports)) === 'object' && ( false ? 'undefined' : (0, _typeof3.default)(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if ((typeof exports === 'undefined' ? 'undefined' : (0, _typeof3.default)(exports)) === 'object') exports["axios"] = factory();else root["axios"] = factory();
	})(undefined, function () {
		return (/******/function (modules) {
				// webpackBootstrap
				/******/ // The module cache
				/******/var installedModules = {};
				/******/
				/******/ // The require function
				/******/function __webpack_require__(moduleId) {
					/******/
					/******/ // Check if module is in cache
					/******/if (installedModules[moduleId])
						/******/return installedModules[moduleId].exports;
					/******/
					/******/ // Create a new module (and put it into the cache)
					/******/var module = installedModules[moduleId] = {
						/******/exports: {},
						/******/id: moduleId,
						/******/loaded: false
						/******/ };
					/******/
					/******/ // Execute the module function
					/******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
					/******/
					/******/ // Flag the module as loaded
					/******/module.loaded = true;
					/******/
					/******/ // Return the exports of the module
					/******/return module.exports;
					/******/
				}
				/******/
				/******/
				/******/ // expose the modules object (__webpack_modules__)
				/******/__webpack_require__.m = modules;
				/******/
				/******/ // expose the module cache
				/******/__webpack_require__.c = installedModules;
				/******/
				/******/ // __webpack_public_path__
				/******/__webpack_require__.p = "";
				/******/
				/******/ // Load entry module and return exports
				/******/return __webpack_require__(0);
				/******/
			}(
			/************************************************************************/
			/******/[
			/* 0 */
			/***/function (module, exports, __webpack_require__) {

				module.exports = __webpack_require__(1);

				/***/
			},
			/* 1 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				var defaults = __webpack_require__(2);
				var utils = __webpack_require__(3);
				var dispatchRequest = __webpack_require__(4);
				var InterceptorManager = __webpack_require__(12);
				var isAbsoluteURL = __webpack_require__(13);
				var combineURLs = __webpack_require__(14);
				var bind = __webpack_require__(15);
				var transformData = __webpack_require__(8);

				function Axios(defaultConfig) {
					this.defaults = utils.merge({}, defaultConfig);
					this.interceptors = {
						request: new InterceptorManager(),
						response: new InterceptorManager()
					};
				}

				Axios.prototype.request = function request(config) {
					/*eslint no-param-reassign:0*/
					// Allow for axios('example/url'[, config]) a la fetch API
					if (typeof config === 'string') {
						config = utils.merge({
							url: arguments[0]
						}, arguments[1]);
					}

					config = utils.merge(defaults, this.defaults, { method: 'get' }, config);

					// Support baseURL config
					if (config.baseURL && !isAbsoluteURL(config.url)) {
						config.url = combineURLs(config.baseURL, config.url);
					}

					// Don't allow overriding defaults.withCredentials
					config.withCredentials = config.withCredentials || this.defaults.withCredentials;

					// Transform request data
					config.data = transformData(config.data, config.headers, config.transformRequest);

					// Flatten headers
					config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});

					utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {
						delete config.headers[method];
					});

					// Hook up interceptors middleware
					var chain = [dispatchRequest, undefined];
					var promise = _promise2.default.resolve(config);

					this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
						chain.unshift(interceptor.fulfilled, interceptor.rejected);
					});

					this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
						chain.push(interceptor.fulfilled, interceptor.rejected);
					});

					while (chain.length) {
						promise = promise.then(chain.shift(), chain.shift());
					}

					return promise;
				};

				var defaultInstance = new Axios(defaults);
				var axios = module.exports = bind(Axios.prototype.request, defaultInstance);

				axios.create = function create(defaultConfig) {
					return new Axios(defaultConfig);
				};

				// Expose defaults
				axios.defaults = defaultInstance.defaults;

				// Expose all/spread
				axios.all = function all(promises) {
					return _promise2.default.all(promises);
				};
				axios.spread = __webpack_require__(16);

				// Expose interceptors
				axios.interceptors = defaultInstance.interceptors;

				// Provide aliases for supported request methods
				utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
					/*eslint func-names:0*/
					Axios.prototype[method] = function (url, config) {
						return this.request(utils.merge(config || {}, {
							method: method,
							url: url
						}));
					};
					axios[method] = bind(Axios.prototype[method], defaultInstance);
				});

				utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
					/*eslint func-names:0*/
					Axios.prototype[method] = function (url, data, config) {
						return this.request(utils.merge(config || {}, {
							method: method,
							url: url,
							data: data
						}));
					};
					axios[method] = bind(Axios.prototype[method], defaultInstance);
				});

				/***/
			},
			/* 2 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				var utils = __webpack_require__(3);

				var PROTECTION_PREFIX = /^\)\]\}',?\n/;
				var DEFAULT_CONTENT_TYPE = {
					'Content-Type': 'application/x-www-form-urlencoded'
				};

				module.exports = {
					transformRequest: [function transformResponseJSON(data, headers) {
						if (utils.isFormData(data)) {
							return data;
						}
						if (utils.isArrayBuffer(data)) {
							return data;
						}
						if (utils.isArrayBufferView(data)) {
							return data.buffer;
						}
						if (utils.isObject(data) && !utils.isFile(data) && !utils.isBlob(data)) {
							// Set application/json if no Content-Type has been specified
							if (!utils.isUndefined(headers)) {
								utils.forEach(headers, function processContentTypeHeader(val, key) {
									if (key.toLowerCase() === 'content-type') {
										headers['Content-Type'] = val;
									}
								});

								if (utils.isUndefined(headers['Content-Type'])) {
									headers['Content-Type'] = 'application/json;charset=utf-8';
								}
							}
							return (0, _stringify2.default)(data);
						}
						return data;
					}],

					transformResponse: [function transformResponseJSON(data) {
						/*eslint no-param-reassign:0*/
						if (typeof data === 'string') {
							data = data.replace(PROTECTION_PREFIX, '');
							try {
								data = JSON.parse(data);
							} catch (e) {/* Ignore */}
						}
						return data;
					}],

					headers: {
						common: {
							'Accept': 'application/json, text/plain, */*'
						},
						patch: utils.merge(DEFAULT_CONTENT_TYPE),
						post: utils.merge(DEFAULT_CONTENT_TYPE),
						put: utils.merge(DEFAULT_CONTENT_TYPE)
					},

					timeout: 0,

					xsrfCookieName: 'XSRF-TOKEN',
					xsrfHeaderName: 'X-XSRF-TOKEN'
				};

				/***/
			},
			/* 3 */
			/***/function (module, exports) {

				'use strict';

				/*global toString:true*/

				// utils is a library of generic helper functions non-specific to axios

				var toString = Object.prototype.toString;

				/**
	    * Determine if a value is an Array
	    *
	    * @param {Object} val The value to test
	    * @returns {boolean} True if value is an Array, otherwise false
	    */
				function isArray(val) {
					return toString.call(val) === '[object Array]';
				}

				/**
	    * Determine if a value is an ArrayBuffer
	    *
	    * @param {Object} val The value to test
	    * @returns {boolean} True if value is an ArrayBuffer, otherwise false
	    */
				function isArrayBuffer(val) {
					return toString.call(val) === '[object ArrayBuffer]';
				}

				/**
	    * Determine if a value is a FormData
	    *
	    * @param {Object} val The value to test
	    * @returns {boolean} True if value is an FormData, otherwise false
	    */
				function isFormData(val) {
					return toString.call(val) === '[object FormData]';
				}

				/**
	    * Determine if a value is a view on an ArrayBuffer
	    *
	    * @param {Object} val The value to test
	    * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
	    */
				function isArrayBufferView(val) {
					var result;
					if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
						result = ArrayBuffer.isView(val);
					} else {
						result = val && val.buffer && val.buffer instanceof ArrayBuffer;
					}
					return result;
				}

				/**
	    * Determine if a value is a String
	    *
	    * @param {Object} val The value to test
	    * @returns {boolean} True if value is a String, otherwise false
	    */
				function isString(val) {
					return typeof val === 'string';
				}

				/**
	    * Determine if a value is a Number
	    *
	    * @param {Object} val The value to test
	    * @returns {boolean} True if value is a Number, otherwise false
	    */
				function isNumber(val) {
					return typeof val === 'number';
				}

				/**
	    * Determine if a value is undefined
	    *
	    * @param {Object} val The value to test
	    * @returns {boolean} True if the value is undefined, otherwise false
	    */
				function isUndefined(val) {
					return typeof val === 'undefined';
				}

				/**
	    * Determine if a value is an Object
	    *
	    * @param {Object} val The value to test
	    * @returns {boolean} True if value is an Object, otherwise false
	    */
				function isObject(val) {
					return val !== null && (typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) === 'object';
				}

				/**
	    * Determine if a value is a Date
	    *
	    * @param {Object} val The value to test
	    * @returns {boolean} True if value is a Date, otherwise false
	    */
				function isDate(val) {
					return toString.call(val) === '[object Date]';
				}

				/**
	    * Determine if a value is a File
	    *
	    * @param {Object} val The value to test
	    * @returns {boolean} True if value is a File, otherwise false
	    */
				function isFile(val) {
					return toString.call(val) === '[object File]';
				}

				/**
	    * Determine if a value is a Blob
	    *
	    * @param {Object} val The value to test
	    * @returns {boolean} True if value is a Blob, otherwise false
	    */
				function isBlob(val) {
					return toString.call(val) === '[object Blob]';
				}

				/**
	    * Trim excess whitespace off the beginning and end of a string
	    *
	    * @param {String} str The String to trim
	    * @returns {String} The String freed of excess whitespace
	    */
				function trim(str) {
					return str.replace(/^\s*/, '').replace(/\s*$/, '');
				}

				/**
	    * Determine if we're running in a standard browser environment
	    *
	    * This allows axios to run in a web worker, and react-native.
	    * Both environments support XMLHttpRequest, but not fully standard globals.
	    *
	    * web workers:
	    *  typeof window -> undefined
	    *  typeof document -> undefined
	    *
	    * react-native:
	    *  typeof document.createElement -> undefined
	    */
				function isStandardBrowserEnv() {
					return typeof window !== 'undefined' && typeof document !== 'undefined' && typeof document.createElement === 'function';
				}

				/**
	    * Iterate over an Array or an Object invoking a function for each item.
	    *
	    * If `obj` is an Array callback will be called passing
	    * the value, index, and complete array for each item.
	    *
	    * If 'obj' is an Object callback will be called passing
	    * the value, key, and complete object for each property.
	    *
	    * @param {Object|Array} obj The object to iterate
	    * @param {Function} fn The callback to invoke for each item
	    */
				function forEach(obj, fn) {
					// Don't bother if no value provided
					if (obj === null || typeof obj === 'undefined') {
						return;
					}

					// Force an array if not already something iterable
					if ((typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) !== 'object' && !isArray(obj)) {
						/*eslint no-param-reassign:0*/
						obj = [obj];
					}

					if (isArray(obj)) {
						// Iterate over array values
						for (var i = 0, l = obj.length; i < l; i++) {
							fn.call(null, obj[i], i, obj);
						}
					} else {
						// Iterate over object keys
						for (var key in obj) {
							if (obj.hasOwnProperty(key)) {
								fn.call(null, obj[key], key, obj);
							}
						}
					}
				}

				/**
	    * Accepts varargs expecting each argument to be an object, then
	    * immutably merges the properties of each object and returns result.
	    *
	    * When multiple objects contain the same key the later object in
	    * the arguments list will take precedence.
	    *
	    * Example:
	    *
	    * ```js
	    * var result = merge({foo: 123}, {foo: 456});
	    * console.log(result.foo); // outputs 456
	    * ```
	    *
	    * @param {Object} obj1 Object to merge
	    * @returns {Object} Result of all merge properties
	    */
				function merge() /* obj1, obj2, obj3, ... */{
					var result = {};
					function assignValue(val, key) {
						if ((0, _typeof3.default)(result[key]) === 'object' && (typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) === 'object') {
							result[key] = merge(result[key], val);
						} else {
							result[key] = val;
						}
					}

					for (var i = 0, l = arguments.length; i < l; i++) {
						forEach(arguments[i], assignValue);
					}
					return result;
				}

				module.exports = {
					isArray: isArray,
					isArrayBuffer: isArrayBuffer,
					isFormData: isFormData,
					isArrayBufferView: isArrayBufferView,
					isString: isString,
					isNumber: isNumber,
					isObject: isObject,
					isUndefined: isUndefined,
					isDate: isDate,
					isFile: isFile,
					isBlob: isBlob,
					isStandardBrowserEnv: isStandardBrowserEnv,
					forEach: forEach,
					merge: merge,
					trim: trim
				};

				/***/
			},
			/* 4 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				/**
	    * Dispatch a request to the server using whichever adapter
	    * is supported by the current environment.
	    *
	    * @param {object} config The config that is to be used for the request
	    * @returns {Promise} The Promise to be fulfilled
	    */

				module.exports = function dispatchRequest(config) {
					return new _promise2.default(function executor(resolve, reject) {
						try {
							var adapter;

							if (typeof config.adapter === 'function') {
								// For custom adapter support
								adapter = config.adapter;
							} else if (typeof XMLHttpRequest !== 'undefined') {
								// For browsers use XHR adapter
								adapter = __webpack_require__(5);
							} else if (typeof process !== 'undefined') {
								// For node use HTTP adapter
								adapter = __webpack_require__(5);
							}

							if (typeof adapter === 'function') {
								adapter(resolve, reject, config);
							}
						} catch (e) {
							reject(e);
						}
					});
				};

				/***/
			},
			/* 5 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				var utils = __webpack_require__(3);
				var buildURL = __webpack_require__(6);
				var parseHeaders = __webpack_require__(7);
				var transformData = __webpack_require__(8);
				var isURLSameOrigin = __webpack_require__(9);
				var btoa = window.btoa || __webpack_require__(10);

				module.exports = function xhrAdapter(resolve, reject, config) {
					var requestData = config.data;
					var requestHeaders = config.headers;

					if (utils.isFormData(requestData)) {
						delete requestHeaders['Content-Type']; // Let the browser set it
					}

					var request = new XMLHttpRequest();

					// For IE 8/9 CORS support
					// Only supports POST and GET calls and doesn't returns the response headers.
					if (window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {
						request = new window.XDomainRequest();
					}

					// HTTP basic authentication
					if (config.auth) {
						var username = config.auth.username || '';
						var password = config.auth.password || '';
						requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
					}

					request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

					// Set the request timeout in MS
					request.timeout = config.timeout;

					// Listen for ready state
					request.onload = function handleLoad() {
						if (!request) {
							return;
						}
						// Prepare the response
						var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
						var responseData = ['text', ''].indexOf(config.responseType || '') !== -1 ? request.responseText : request.response;
						var response = {
							data: transformData(responseData, responseHeaders, config.transformResponse),
							// IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)
							status: request.status === 1223 ? 204 : request.status,
							statusText: request.status === 1223 ? 'No Content' : request.statusText,
							headers: responseHeaders,
							config: config
						};

						// Resolve or reject the Promise based on the status
						(response.status >= 200 && response.status < 300 || !('status' in request) && response.responseText ? resolve : reject)(response);

						// Clean up request
						request = null;
					};

					// Handle low level network errors
					request.onerror = function handleError() {
						// Real errors are hidden from us by the browser
						// onerror should only fire if it's a network error
						reject(new Error('Network Error'));

						// Clean up request
						request = null;
					};

					// Add xsrf header
					// This is only done if running in a standard browser environment.
					// Specifically not if we're in a web worker, or react-native.
					if (utils.isStandardBrowserEnv()) {
						var cookies = __webpack_require__(11);

						// Add xsrf header
						var xsrfValue = config.withCredentials || isURLSameOrigin(config.url) ? cookies.read(config.xsrfCookieName) : undefined;

						if (xsrfValue) {
							requestHeaders[config.xsrfHeaderName] = xsrfValue;
						}
					}

					// Add headers to the request
					if ('setRequestHeader' in request) {
						utils.forEach(requestHeaders, function setRequestHeader(val, key) {
							if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
								// Remove Content-Type if data is undefined
								delete requestHeaders[key];
							} else {
								// Otherwise add header to the request
								request.setRequestHeader(key, val);
							}
						});
					}

					// Add withCredentials to request if needed
					if (config.withCredentials) {
						request.withCredentials = true;
					}

					// Add responseType to request if needed
					if (config.responseType) {
						try {
							request.responseType = config.responseType;
						} catch (e) {
							if (request.responseType !== 'json') {
								throw e;
							}
						}
					}

					if (utils.isArrayBuffer(requestData)) {
						requestData = new DataView(requestData);
					}

					// Send the request
					request.send(requestData);
				};

				/***/
			},
			/* 6 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				var utils = __webpack_require__(3);

				function encode(val) {
					return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
				}

				/**
	    * Build a URL by appending params to the end
	    *
	    * @param {string} url The base of the url (e.g., http://www.google.com)
	    * @param {object} [params] The params to be appended
	    * @returns {string} The formatted url
	    */
				module.exports = function buildURL(url, params, paramsSerializer) {
					/*eslint no-param-reassign:0*/
					if (!params) {
						return url;
					}

					var serializedParams;
					if (paramsSerializer) {
						serializedParams = paramsSerializer(params);
					} else {
						var parts = [];

						utils.forEach(params, function serialize(val, key) {
							if (val === null || typeof val === 'undefined') {
								return;
							}

							if (utils.isArray(val)) {
								key = key + '[]';
							}

							if (!utils.isArray(val)) {
								val = [val];
							}

							utils.forEach(val, function parseValue(v) {
								if (utils.isDate(v)) {
									v = v.toISOString();
								} else if (utils.isObject(v)) {
									v = (0, _stringify2.default)(v);
								}
								parts.push(encode(key) + '=' + encode(v));
							});
						});

						serializedParams = parts.join('&');
					}

					if (serializedParams) {
						url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
					}

					return url;
				};

				/***/
			},
			/* 7 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				var utils = __webpack_require__(3);

				/**
	    * Parse headers into an object
	    *
	    * ```
	    * Date: Wed, 27 Aug 2014 08:58:49 GMT
	    * Content-Type: application/json
	    * Connection: keep-alive
	    * Transfer-Encoding: chunked
	    * ```
	    *
	    * @param {String} headers Headers needing to be parsed
	    * @returns {Object} Headers parsed into an object
	    */
				module.exports = function parseHeaders(headers) {
					var parsed = {};
					var key;
					var val;
					var i;

					if (!headers) {
						return parsed;
					}

					utils.forEach(headers.split('\n'), function parser(line) {
						i = line.indexOf(':');
						key = utils.trim(line.substr(0, i)).toLowerCase();
						val = utils.trim(line.substr(i + 1));

						if (key) {
							parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
						}
					});

					return parsed;
				};

				/***/
			},
			/* 8 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				var utils = __webpack_require__(3);

				/**
	    * Transform the data for a request or a response
	    *
	    * @param {Object|String} data The data to be transformed
	    * @param {Array} headers The headers for the request or response
	    * @param {Array|Function} fns A single function or Array of functions
	    * @returns {*} The resulting transformed data
	    */
				module.exports = function transformData(data, headers, fns) {
					/*eslint no-param-reassign:0*/
					utils.forEach(fns, function transform(fn) {
						data = fn(data, headers);
					});

					return data;
				};

				/***/
			},
			/* 9 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				var utils = __webpack_require__(3);

				module.exports = utils.isStandardBrowserEnv() ?

				// Standard browser envs have full support of the APIs needed to test
				// whether the request URL is of the same origin as current location.
				function standardBrowserEnv() {
					var msie = /(msie|trident)/i.test(navigator.userAgent);
					var urlParsingNode = document.createElement('a');
					var originURL;

					/**
	    * Parse a URL to discover it's components
	    *
	    * @param {String} url The URL to be parsed
	    * @returns {Object}
	    */
					function resolveURL(url) {
						var href = url;

						if (msie) {
							// IE needs attribute set twice to normalize properties
							urlParsingNode.setAttribute('href', href);
							href = urlParsingNode.href;
						}

						urlParsingNode.setAttribute('href', href);

						// urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
						return {
							href: urlParsingNode.href,
							protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
							host: urlParsingNode.host,
							search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
							hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
							hostname: urlParsingNode.hostname,
							port: urlParsingNode.port,
							pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
						};
					}

					originURL = resolveURL(window.location.href);

					/**
	    * Determine if a URL shares the same origin as the current location
	    *
	    * @param {String} requestURL The URL to test
	    * @returns {boolean} True if URL shares the same origin, otherwise false
	    */
					return function isURLSameOrigin(requestURL) {
						var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
						return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
					};
				}() :

				// Non standard browser envs (web workers, react-native) lack needed support.
				function nonStandardBrowserEnv() {
					return function isURLSameOrigin() {
						return true;
					};
				}();

				/***/
			},
			/* 10 */
			/***/function (module, exports) {

				'use strict';

				// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

				var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

				function InvalidCharacterError(message) {
					this.message = message;
				}
				InvalidCharacterError.prototype = new Error();
				InvalidCharacterError.prototype.code = 5;
				InvalidCharacterError.prototype.name = 'InvalidCharacterError';

				function btoa(input) {
					var str = String(input);
					var output = '';
					for (
					// initialize result and counter
					var block, charCode, idx = 0, map = chars;
					// if the next str index does not exist:
					//   change the mapping table to "="
					//   check if d has no fractional digits
					str.charAt(idx | 0) || (map = '=', idx % 1);
					// "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
					output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
						charCode = str.charCodeAt(idx += 3 / 4);
						if (charCode > 0xFF) {
							throw new InvalidCharacterError('INVALID_CHARACTER_ERR: DOM Exception 5');
						}
						block = block << 8 | charCode;
					}
					return output;
				}

				module.exports = btoa;

				/***/
			},
			/* 11 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				var utils = __webpack_require__(3);

				module.exports = utils.isStandardBrowserEnv() ?

				// Standard browser envs support document.cookie
				function standardBrowserEnv() {
					return {
						write: function write(name, value, expires, path, domain, secure) {
							var cookie = [];
							cookie.push(name + '=' + encodeURIComponent(value));

							if (utils.isNumber(expires)) {
								cookie.push('expires=' + new Date(expires).toGMTString());
							}

							if (utils.isString(path)) {
								cookie.push('path=' + path);
							}

							if (utils.isString(domain)) {
								cookie.push('domain=' + domain);
							}

							if (secure === true) {
								cookie.push('secure');
							}

							document.cookie = cookie.join('; ');
						},

						read: function read(name) {
							var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
							return match ? decodeURIComponent(match[3]) : null;
						},

						remove: function remove(name) {
							this.write(name, '', Date.now() - 86400000);
						}
					};
				}() :

				// Non standard browser env (web workers, react-native) lack needed support.
				function nonStandardBrowserEnv() {
					return {
						write: function write() {},
						read: function read() {
							return null;
						},
						remove: function remove() {}
					};
				}();

				/***/
			},
			/* 12 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				var utils = __webpack_require__(3);

				function InterceptorManager() {
					this.handlers = [];
				}

				/**
	    * Add a new interceptor to the stack
	    *
	    * @param {Function} fulfilled The function to handle `then` for a `Promise`
	    * @param {Function} rejected The function to handle `reject` for a `Promise`
	    *
	    * @return {Number} An ID used to remove interceptor later
	    */
				InterceptorManager.prototype.use = function use(fulfilled, rejected) {
					this.handlers.push({
						fulfilled: fulfilled,
						rejected: rejected
					});
					return this.handlers.length - 1;
				};

				/**
	    * Remove an interceptor from the stack
	    *
	    * @param {Number} id The ID that was returned by `use`
	    */
				InterceptorManager.prototype.eject = function eject(id) {
					if (this.handlers[id]) {
						this.handlers[id] = null;
					}
				};

				/**
	    * Iterate over all the registered interceptors
	    *
	    * This method is particularly useful for skipping over any
	    * interceptors that may have become `null` calling `eject`.
	    *
	    * @param {Function} fn The function to call for each interceptor
	    */
				InterceptorManager.prototype.forEach = function forEach(fn) {
					utils.forEach(this.handlers, function forEachHandler(h) {
						if (h !== null) {
							fn(h);
						}
					});
				};

				module.exports = InterceptorManager;

				/***/
			},
			/* 13 */
			/***/function (module, exports) {

				'use strict';

				/**
	    * Determines whether the specified URL is absolute
	    *
	    * @param {string} url The URL to test
	    * @returns {boolean} True if the specified URL is absolute, otherwise false
	    */

				module.exports = function isAbsoluteURL(url) {
					// A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
					// RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
					// by any combination of letters, digits, plus, period, or hyphen.
					return (/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url)
					);
				};

				/***/
			},
			/* 14 */
			/***/function (module, exports) {

				'use strict';

				/**
	    * Creates a new URL by combining the specified URLs
	    *
	    * @param {string} baseURL The base URL
	    * @param {string} relativeURL The relative URL
	    * @returns {string} The combined URL
	    */

				module.exports = function combineURLs(baseURL, relativeURL) {
					return baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '');
				};

				/***/
			},
			/* 15 */
			/***/function (module, exports) {

				'use strict';

				module.exports = function bind(fn, thisArg) {
					return function wrap() {
						var args = new Array(arguments.length);
						for (var i = 0; i < args.length; i++) {
							args[i] = arguments[i];
						}
						return fn.apply(thisArg, args);
					};
				};

				/***/
			},
			/* 16 */
			/***/function (module, exports) {

				'use strict';

				/**
	    * Syntactic sugar for invoking a function and expanding an array for arguments.
	    *
	    * Common use case would be to use `Function.prototype.apply`.
	    *
	    *  ```js
	    *  function f(x, y, z) {}
	    *  var args = [1, 2, 3];
	    *  f.apply(null, args);
	    *  ```
	    *
	    * With `spread` this example can be re-written.
	    *
	    *  ```js
	    *  spread(function(x, y, z) {})([1, 2, 3]);
	    *  ```
	    *
	    * @param {Function} callback
	    * @returns {Function}
	    */

				module.exports = function spread(callback) {
					return function wrap(arr) {
						return callback.apply(null, arr);
					};
				};

				/***/
			}
			/******/])
		);
	});
	;
	//# sourceMappingURL=axios.map
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3)(module)))

/***/ },
/* 2 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	(function () {
	  try {
	    cachedSetTimeout = setTimeout;
	  } catch (e) {
	    cachedSetTimeout = function () {
	      throw new Error('setTimeout is not defined');
	    }
	  }
	  try {
	    cachedClearTimeout = clearTimeout;
	  } catch (e) {
	    cachedClearTimeout = function () {
	      throw new Error('clearTimeout is not defined');
	    }
	  }
	} ())
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = cachedSetTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    cachedClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        cachedSetTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(5), __esModule: true };

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	var core  = __webpack_require__(6)
	  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});
	module.exports = function stringify(it){ // eslint-disable-line no-unused-vars
	  return $JSON.stringify.apply($JSON, arguments);
	};

/***/ },
/* 6 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(8), __esModule: true };

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(9);
	__webpack_require__(10);
	__webpack_require__(53);
	__webpack_require__(57);
	module.exports = __webpack_require__(6).Promise;

/***/ },
/* 9 */
/***/ function(module, exports) {

	

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(11)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(14)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(12)
	  , defined   = __webpack_require__(13);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 12 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 13 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(15)
	  , $export        = __webpack_require__(16)
	  , redefine       = __webpack_require__(30)
	  , hide           = __webpack_require__(20)
	  , has            = __webpack_require__(31)
	  , Iterators      = __webpack_require__(32)
	  , $iterCreate    = __webpack_require__(33)
	  , setToStringTag = __webpack_require__(49)
	  , getPrototypeOf = __webpack_require__(51)
	  , ITERATOR       = __webpack_require__(50)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';

	var returnThis = function(){ return this; };

	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 15 */
/***/ function(module, exports) {

	module.exports = true;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(17)
	  , core      = __webpack_require__(6)
	  , ctx       = __webpack_require__(18)
	  , hide      = __webpack_require__(20)
	  , PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE]
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(a, b, c){
	        if(this instanceof C){
	          switch(arguments.length){
	            case 0: return new C;
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if(IS_PROTO){
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 17 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(19);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 19 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(21)
	  , createDesc = __webpack_require__(29);
	module.exports = __webpack_require__(25) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(22)
	  , IE8_DOM_DEFINE = __webpack_require__(24)
	  , toPrimitive    = __webpack_require__(28)
	  , dP             = Object.defineProperty;

	exports.f = __webpack_require__(25) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(23);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 23 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(25) && !__webpack_require__(26)(function(){
	  return Object.defineProperty(__webpack_require__(27)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(26)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 26 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(23)
	  , document = __webpack_require__(17).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(23);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 29 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(20);

/***/ },
/* 31 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 32 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(34)
	  , descriptor     = __webpack_require__(29)
	  , setToStringTag = __webpack_require__(49)
	  , IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(20)(IteratorPrototype, __webpack_require__(50)('iterator'), function(){ return this; });

	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(22)
	  , dPs         = __webpack_require__(35)
	  , enumBugKeys = __webpack_require__(47)
	  , IE_PROTO    = __webpack_require__(44)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(27)('iframe')
	    , i      = enumBugKeys.length
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(48).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write('<script>document.F=Object</script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(21)
	  , anObject = __webpack_require__(22)
	  , getKeys  = __webpack_require__(36);

	module.exports = __webpack_require__(25) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(37)
	  , enumBugKeys = __webpack_require__(47);

	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(31)
	  , toIObject    = __webpack_require__(38)
	  , arrayIndexOf = __webpack_require__(41)(false)
	  , IE_PROTO     = __webpack_require__(44)('IE_PROTO');

	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(39)
	  , defined = __webpack_require__(13);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(40);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 40 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(38)
	  , toLength  = __webpack_require__(42)
	  , toIndex   = __webpack_require__(43);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(12)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(12)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(45)('keys')
	  , uid    = __webpack_require__(46);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(17)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 46 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 47 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(17).document && document.documentElement;

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(21).f
	  , has = __webpack_require__(31)
	  , TAG = __webpack_require__(50)('toStringTag');

	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(45)('wks')
	  , uid        = __webpack_require__(46)
	  , Symbol     = __webpack_require__(17).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(31)
	  , toObject    = __webpack_require__(52)
	  , IE_PROTO    = __webpack_require__(44)('IE_PROTO')
	  , ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(13);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(54);
	var global        = __webpack_require__(17)
	  , hide          = __webpack_require__(20)
	  , Iterators     = __webpack_require__(32)
	  , TO_STRING_TAG = __webpack_require__(50)('toStringTag');

	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype;
	  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(55)
	  , step             = __webpack_require__(56)
	  , Iterators        = __webpack_require__(32)
	  , toIObject        = __webpack_require__(38);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(14)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 55 */
/***/ function(module, exports) {

	module.exports = function(){ /* empty */ };

/***/ },
/* 56 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(15)
	  , global             = __webpack_require__(17)
	  , ctx                = __webpack_require__(18)
	  , classof            = __webpack_require__(58)
	  , $export            = __webpack_require__(16)
	  , isObject           = __webpack_require__(23)
	  , anObject           = __webpack_require__(22)
	  , aFunction          = __webpack_require__(19)
	  , anInstance         = __webpack_require__(59)
	  , forOf              = __webpack_require__(60)
	  , setProto           = __webpack_require__(64).set
	  , speciesConstructor = __webpack_require__(67)
	  , task               = __webpack_require__(68).set
	  , microtask          = __webpack_require__(70)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;

	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(50)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();

	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};

	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(71)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(49)($Promise, PROMISE);
	__webpack_require__(72)(PROMISE);
	Wrapper = __webpack_require__(6)[PROMISE];

	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(73)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(40)
	  , TAG = __webpack_require__(50)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};

	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 59 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(18)
	  , call        = __webpack_require__(61)
	  , isArrayIter = __webpack_require__(62)
	  , anObject    = __webpack_require__(22)
	  , toLength    = __webpack_require__(42)
	  , getIterFn   = __webpack_require__(63)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(22);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(32)
	  , ITERATOR   = __webpack_require__(50)('iterator')
	  , ArrayProto = Array.prototype;

	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(58)
	  , ITERATOR  = __webpack_require__(50)('iterator')
	  , Iterators = __webpack_require__(32);
	module.exports = __webpack_require__(6).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(23)
	  , anObject = __webpack_require__(22);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(18)(Function.call, __webpack_require__(65).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(66)
	  , createDesc     = __webpack_require__(29)
	  , toIObject      = __webpack_require__(38)
	  , toPrimitive    = __webpack_require__(28)
	  , has            = __webpack_require__(31)
	  , IE8_DOM_DEFINE = __webpack_require__(24)
	  , gOPD           = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(25) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 66 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(22)
	  , aFunction = __webpack_require__(19)
	  , SPECIES   = __webpack_require__(50)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(18)
	  , invoke             = __webpack_require__(69)
	  , html               = __webpack_require__(48)
	  , cel                = __webpack_require__(27)
	  , global             = __webpack_require__(17)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(40)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 69 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(17)
	  , macrotask = __webpack_require__(68).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(40)(process) == 'process';

	module.exports = function(){
	  var head, last, notify;

	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };

	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }

	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	var hide = __webpack_require__(20);
	module.exports = function(target, src, safe){
	  for(var key in src){
	    if(safe && target[key])target[key] = src[key];
	    else hide(target, key, src[key]);
	  } return target;
	};

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(17)
	  , core        = __webpack_require__(6)
	  , dP          = __webpack_require__(21)
	  , DESCRIPTORS = __webpack_require__(25)
	  , SPECIES     = __webpack_require__(50)('species');

	module.exports = function(KEY){
	  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(50)('iterator')
	  , SAFE_CLOSING = false;

	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }

	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _iterator = __webpack_require__(75);

	var _iterator2 = _interopRequireDefault(_iterator);

	var _symbol = __webpack_require__(78);

	var _symbol2 = _interopRequireDefault(_symbol);

	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(76), __esModule: true };

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(10);
	__webpack_require__(53);
	module.exports = __webpack_require__(77).f('iterator');

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(50);

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(79), __esModule: true };

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(80);
	__webpack_require__(9);
	__webpack_require__(89);
	__webpack_require__(90);
	module.exports = __webpack_require__(6).Symbol;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(17)
	  , has            = __webpack_require__(31)
	  , DESCRIPTORS    = __webpack_require__(25)
	  , $export        = __webpack_require__(16)
	  , redefine       = __webpack_require__(30)
	  , META           = __webpack_require__(81).KEY
	  , $fails         = __webpack_require__(26)
	  , shared         = __webpack_require__(45)
	  , setToStringTag = __webpack_require__(49)
	  , uid            = __webpack_require__(46)
	  , wks            = __webpack_require__(50)
	  , wksExt         = __webpack_require__(77)
	  , wksDefine      = __webpack_require__(82)
	  , keyOf          = __webpack_require__(83)
	  , enumKeys       = __webpack_require__(84)
	  , isArray        = __webpack_require__(86)
	  , anObject       = __webpack_require__(22)
	  , toIObject      = __webpack_require__(38)
	  , toPrimitive    = __webpack_require__(28)
	  , createDesc     = __webpack_require__(29)
	  , _create        = __webpack_require__(34)
	  , gOPNExt        = __webpack_require__(87)
	  , $GOPD          = __webpack_require__(65)
	  , $DP            = __webpack_require__(21)
	  , $keys          = __webpack_require__(36)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;

	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};

	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });

	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(88).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(66).f  = $propertyIsEnumerable;
	  __webpack_require__(85).f = $getOwnPropertySymbols;

	  if(DESCRIPTORS && !__webpack_require__(15)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});

	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(20)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(46)('meta')
	  , isObject = __webpack_require__(23)
	  , has      = __webpack_require__(31)
	  , setDesc  = __webpack_require__(21).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(26)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(17)
	  , core           = __webpack_require__(6)
	  , LIBRARY        = __webpack_require__(15)
	  , wksExt         = __webpack_require__(77)
	  , defineProperty = __webpack_require__(21).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(36)
	  , toIObject = __webpack_require__(38);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(36)
	  , gOPS    = __webpack_require__(85)
	  , pIE     = __webpack_require__(66);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 85 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(40);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(38)
	  , gOPN      = __webpack_require__(88).f
	  , toString  = {}.toString;

	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};

	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(37)
	  , hiddenKeys = __webpack_require__(47).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(82)('asyncIterator');

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(82)('observable');

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createClient;

	var _defaults = __webpack_require__(92);

	var _defaults2 = _interopRequireDefault(_defaults);

	var _assign = __webpack_require__(127);

	var _assign2 = _interopRequireDefault(_assign);

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _createHttpClient = __webpack_require__(205);

	var _createHttpClient2 = _interopRequireDefault(_createHttpClient);

	var _wrapHttpClient = __webpack_require__(217);

	var _wrapHttpClient2 = _interopRequireDefault(_wrapHttpClient);

	var _version = __webpack_require__(260);

	var _version2 = _interopRequireDefault(_version);

	var _createContentfulApi = __webpack_require__(261);

	var _createContentfulApi2 = _interopRequireDefault(_createContentfulApi);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create a client instance
	 * @func
	 * @name createClient
	 * @memberof contentfulManagement
	 * @param {object} params - Client initialization parameters
	 * @prop {string} params.accessToken - Contentful CDA Access Token
	 * @prop {boolean=} params.insecure - Requests will be made over http instead of the default https (default: true)
	 * @prop {string=} params.host - API host (default: cda.contentful.com)
	 * @prop {object=} params.agent - Optional Node.js HTTP agent for proxying (see <a href="https://nodejs.org/api/http.html#http_class_http_agent">Node.js docs</a> and <a href="https://www.npmjs.com/package/https-proxy-agent">https-proxy-agent</a>)
	 * @prop {object=} params.headers - Optional additional headers
	 * @prop {number=} params.concurrency - Number of allowed concurrent requests. Changing this value is not recommended. (default: 6)
	 * @prop {number=} params.delay - Delay in milliseconds for waiting after hitting the allowed number of concurrent requests. Changing this value is not recommended. (default: 1000)
	 * @prop {number=} params.maxRetries - Maximum number of retries when a 429 is received (default: 5)
	 * @prop {boolean=} params.retryOnTooManyRequests - If we should retry on 429s (default: true)
	 * @returns {ContentfulClientAPI.ClientAPI}
	 * @example
	 * const client = contentfulManagement.createClient({
	 *  accessToken: 'myAccessToken'
	 * })
	 */
	function createClient(axios, params) {
	  params = (0, _defaults2.default)((0, _cloneDeep2.default)(params), {
	    rateLimit: 6,
	    rateLimitPeriod: 1000,
	    maxRetries: 5,
	    retryOnTooManyRequests: true
	  });

	  if (!params.accessToken) {
	    throw new TypeError('Expected parameter accessToken');
	  }

	  params.defaultHostname = 'api.contentful.com';
	  params.headers = (0, _assign2.default)(params.headers, {
	    'Content-Type': 'application/vnd.contentful.management.v1+json',
	    'X-Contentful-User-Agent': 'contentful-management.js/' + _version2.default
	  });

	  var http = (0, _wrapHttpClient2.default)((0, _createHttpClient2.default)(axios, params), {
	    concurrency: params.rateLimit,
	    delay: params.rateLimitPeriod,
	    maxRetries: params.maxRetries,
	    retryOnTooManyRequests: params.retryOnTooManyRequests
	  });
	  var api = (0, _createContentfulApi2.default)({
	    http: http
	  });

	  return api;
	} /**
	   * Contentful Management API SDK. Allows you to create instances of a client
	   * with access to the Contentful Content Management API.
	   * @namespace contentfulManagement
	   * @see ContentfulClientAPI
	   */

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(93),
	    assignInDefaults = __webpack_require__(94),
	    assignInWith = __webpack_require__(96),
	    rest = __webpack_require__(108);

	/**
	 * Assigns own and inherited enumerable string keyed properties of source
	 * objects to the destination object for all destination properties that
	 * resolve to `undefined`. Source objects are applied from left to right.
	 * Once a property is set, additional values of the same property are ignored.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.defaultsDeep
	 * @example
	 *
	 * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
	 * // => { 'user': 'barney', 'age': 36 }
	 */
	var defaults = rest(function(args) {
	  args.push(undefined, assignInDefaults);
	  return apply(assignInWith, undefined, args);
	});

	module.exports = defaults;


/***/ },
/* 93 */
/***/ function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  var length = args.length;
	  switch (length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}

	module.exports = apply;


/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(95);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used by `_.defaults` to customize its `_.assignIn` use.
	 *
	 * @private
	 * @param {*} objValue The destination value.
	 * @param {*} srcValue The source value.
	 * @param {string} key The key of the property to assign.
	 * @param {Object} object The parent object of `objValue`.
	 * @returns {*} Returns the value to assign.
	 */
	function assignInDefaults(objValue, srcValue, key, object) {
	  if (objValue === undefined ||
	      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	    return srcValue;
	  }
	  return objValue;
	}

	module.exports = assignInDefaults;


/***/ },
/* 95 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 * var other = { 'user': 'fred' };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}

	module.exports = eq;


/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(97),
	    createAssigner = __webpack_require__(99),
	    keysIn = __webpack_require__(114);

	/**
	 * This method is like `_.assignIn` except that it accepts `customizer`
	 * which is invoked to produce the assigned values. If `customizer` returns
	 * `undefined`, assignment is handled by the method instead. The `customizer`
	 * is invoked with five arguments: (objValue, srcValue, key, object, source).
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @alias extendWith
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} sources The source objects.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @returns {Object} Returns `object`.
	 * @see _.assignWith
	 * @example
	 *
	 * function customizer(objValue, srcValue) {
	 *   return _.isUndefined(objValue) ? srcValue : objValue;
	 * }
	 *
	 * var defaults = _.partialRight(_.assignInWith, customizer);
	 *
	 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	 * // => { 'a': 1, 'b': 2 }
	 */
	var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
	  copyObject(source, keysIn(source), object, customizer);
	});

	module.exports = assignInWith;


/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(98);

	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  object || (object = {});

	  var index = -1,
	      length = props.length;

	  while (++index < length) {
	    var key = props[index];

	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : source[key];

	    assignValue(object, key, newValue);
	  }
	  return object;
	}

	module.exports = copyObject;


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(95);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    object[key] = value;
	  }
	}

	module.exports = assignValue;


/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	var isIterateeCall = __webpack_require__(100),
	    rest = __webpack_require__(108);

	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return rest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;

	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;

	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}

	module.exports = createAssigner;


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(95),
	    isArrayLike = __webpack_require__(101),
	    isIndex = __webpack_require__(107),
	    isObject = __webpack_require__(105);

	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}

	module.exports = isIterateeCall;


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var getLength = __webpack_require__(102),
	    isFunction = __webpack_require__(104),
	    isLength = __webpack_require__(106);

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value)) && !isFunction(value);
	}

	module.exports = isArrayLike;


/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(103);

	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a
	 * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	 * Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');

	module.exports = getLength;


/***/ },
/* 103 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}

	module.exports = baseProperty;


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(105);

	/** `Object#toString` result references. */
	var funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8 which returns 'object' for typed array and weak map constructors,
	  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}

	module.exports = isFunction;


/***/ },
/* 105 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ },
/* 106 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length,
	 *  else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	module.exports = isLength;


/***/ },
/* 107 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}

	module.exports = isIndex;


/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(93),
	    toInteger = __webpack_require__(109);

	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * Creates a function that invokes `func` with the `this` binding of the
	 * created function and arguments from `start` and beyond provided as
	 * an array.
	 *
	 * **Note:** This method is based on the
	 * [rest parameter](https://mdn.io/rest_parameters).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Function
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var say = _.rest(function(what, names) {
	 *   return what + ' ' + _.initial(names).join(', ') +
	 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	 * });
	 *
	 * say('hello', 'fred', 'barney', 'pebbles');
	 * // => 'hello fred, barney, & pebbles'
	 */
	function rest(func, start) {
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);

	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    switch (start) {
	      case 0: return func.call(this, array);
	      case 1: return func.call(this, args[0], array);
	      case 2: return func.call(this, args[0], args[1], array);
	    }
	    var otherArgs = Array(start + 1);
	    index = -1;
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = array;
	    return apply(func, this, otherArgs);
	  };
	}

	module.exports = rest;


/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(110);

	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;

	  return result === result ? (remainder ? result - remainder : result) : 0;
	}

	module.exports = toInteger;


/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(111);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;

	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}

	module.exports = toFinite;


/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(104),
	    isObject = __webpack_require__(105),
	    isSymbol = __webpack_require__(112);

	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;

	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;

	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;

	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;

	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;

	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = isFunction(value.valueOf) ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}

	module.exports = toNumber;


/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(113);

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}

	module.exports = isSymbol;


/***/ },
/* 113 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	var baseKeysIn = __webpack_require__(115),
	    indexKeys = __webpack_require__(120),
	    isIndex = __webpack_require__(107),
	    isPrototype = __webpack_require__(126);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  var index = -1,
	      isProto = isPrototype(object),
	      props = baseKeysIn(object),
	      propsLength = props.length,
	      indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;

	  while (++index < propsLength) {
	    var key = props[index];
	    if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = keysIn;


/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	var Reflect = __webpack_require__(116),
	    iteratorToArray = __webpack_require__(119);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Built-in value references. */
	var enumerate = Reflect ? Reflect.enumerate : undefined,
	    propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/**
	 * The base implementation of `_.keysIn` which doesn't skip the constructor
	 * property of prototypes or treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  object = object == null ? object : Object(object);

	  var result = [];
	  for (var key in object) {
	    result.push(key);
	  }
	  return result;
	}

	// Fallback for IE < 9 with es6-shim.
	if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {
	  baseKeysIn = function(object) {
	    return iteratorToArray(enumerate(object));
	  };
	}

	module.exports = baseKeysIn;


/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(117);

	/** Built-in value references. */
	var Reflect = root.Reflect;

	module.exports = Reflect;


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var checkGlobal = __webpack_require__(118);

	/** Detect free variable `global` from Node.js. */
	var freeGlobal = checkGlobal(typeof global == 'object' && global);

	/** Detect free variable `self`. */
	var freeSelf = checkGlobal(typeof self == 'object' && self);

	/** Detect `this` as the global object. */
	var thisGlobal = checkGlobal(typeof this == 'object' && this);

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();

	module.exports = root;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 118 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a global object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {null|Object} Returns `value` if it's a global object, else `null`.
	 */
	function checkGlobal(value) {
	  return (value && value.Object === Object) ? value : null;
	}

	module.exports = checkGlobal;


/***/ },
/* 119 */
/***/ function(module, exports) {

	/**
	 * Converts `iterator` to an array.
	 *
	 * @private
	 * @param {Object} iterator The iterator to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function iteratorToArray(iterator) {
	  var data,
	      result = [];

	  while (!(data = iterator.next()).done) {
	    result.push(data.value);
	  }
	  return result;
	}

	module.exports = iteratorToArray;


/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(121),
	    isArguments = __webpack_require__(122),
	    isArray = __webpack_require__(124),
	    isLength = __webpack_require__(106),
	    isString = __webpack_require__(125);

	/**
	 * Creates an array of index keys for `object` values of arrays,
	 * `arguments` objects, and strings, otherwise `null` is returned.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array|null} Returns index keys, else `null`.
	 */
	function indexKeys(object) {
	  var length = object ? object.length : undefined;
	  if (isLength(length) &&
	      (isArray(object) || isString(object) || isArguments(object))) {
	    return baseTimes(length, String);
	  }
	  return null;
	}

	module.exports = indexKeys;


/***/ },
/* 121 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);

	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}

	module.exports = baseTimes;


/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(123);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}

	module.exports = isArguments;


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(101),
	    isObjectLike = __webpack_require__(113);

	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}

	module.exports = isArrayLikeObject;


/***/ },
/* 124 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @type {Function}
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	module.exports = isArray;


/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(124),
	    isObjectLike = __webpack_require__(113);

	/** `Object#toString` result references. */
	var stringTag = '[object String]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	}

	module.exports = isString;


/***/ },
/* 126 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	  return value === proto;
	}

	module.exports = isPrototype;


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(98),
	    copyObject = __webpack_require__(97),
	    createAssigner = __webpack_require__(99),
	    isArrayLike = __webpack_require__(101),
	    isPrototype = __webpack_require__(126),
	    keys = __webpack_require__(128);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
	var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');

	/**
	 * Assigns own enumerable string keyed properties of source objects to the
	 * destination object. Source objects are applied from left to right.
	 * Subsequent sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object` and is loosely based on
	 * [`Object.assign`](https://mdn.io/Object/assign).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.10.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.assignIn
	 * @example
	 *
	 * function Foo() {
	 *   this.c = 3;
	 * }
	 *
	 * function Bar() {
	 *   this.e = 5;
	 * }
	 *
	 * Foo.prototype.d = 4;
	 * Bar.prototype.f = 6;
	 *
	 * _.assign({ 'a': 1 }, new Foo, new Bar);
	 * // => { 'a': 1, 'c': 3, 'e': 5 }
	 */
	var assign = createAssigner(function(object, source) {
	  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
	    copyObject(source, keys(source), object);
	    return;
	  }
	  for (var key in source) {
	    if (hasOwnProperty.call(source, key)) {
	      assignValue(object, key, source[key]);
	    }
	  }
	});

	module.exports = assign;


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(129),
	    baseKeys = __webpack_require__(131),
	    indexKeys = __webpack_require__(120),
	    isArrayLike = __webpack_require__(101),
	    isIndex = __webpack_require__(107),
	    isPrototype = __webpack_require__(126);

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  var isProto = isPrototype(object);
	  if (!(isProto || isArrayLike(object))) {
	    return baseKeys(object);
	  }
	  var indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;

	  for (var key in object) {
	    if (baseHas(object, key) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(isProto && key == 'constructor')) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = keys;


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	var getPrototype = __webpack_require__(130);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	  // that are composed entirely of index properties, return `false` for
	  // `hasOwnProperty` checks of them.
	  return object != null &&
	    (hasOwnProperty.call(object, key) ||
	      (typeof object == 'object' && key in object && getPrototype(object) === null));
	}

	module.exports = baseHas;


/***/ },
/* 130 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetPrototype = Object.getPrototypeOf;

	/**
	 * Gets the `[[Prototype]]` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {null|Object} Returns the `[[Prototype]]`.
	 */
	function getPrototype(value) {
	  return nativeGetPrototype(Object(value));
	}

	module.exports = getPrototype;


/***/ },
/* 131 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = Object.keys;

	/**
	 * The base implementation of `_.keys` which doesn't skip the constructor
	 * property of prototypes or treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  return nativeKeys(Object(object));
	}

	module.exports = baseKeys;


/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(133);

	/**
	 * This method is like `_.clone` except that it recursively clones `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.0.0
	 * @category Lang
	 * @param {*} value The value to recursively clone.
	 * @returns {*} Returns the deep cloned value.
	 * @see _.clone
	 * @example
	 *
	 * var objects = [{ 'a': 1 }, { 'b': 2 }];
	 *
	 * var deep = _.cloneDeep(objects);
	 * console.log(deep[0] === objects[0]);
	 * // => false
	 */
	function cloneDeep(value) {
	  return baseClone(value, true, true);
	}

	module.exports = cloneDeep;


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(134),
	    arrayEach = __webpack_require__(170),
	    assignValue = __webpack_require__(98),
	    baseAssign = __webpack_require__(171),
	    cloneBuffer = __webpack_require__(172),
	    copyArray = __webpack_require__(173),
	    copySymbols = __webpack_require__(174),
	    getAllKeys = __webpack_require__(177),
	    getTag = __webpack_require__(180),
	    initCloneArray = __webpack_require__(185),
	    initCloneByTag = __webpack_require__(186),
	    initCloneObject = __webpack_require__(201),
	    isArray = __webpack_require__(124),
	    isBuffer = __webpack_require__(203),
	    isHostObject = __webpack_require__(154),
	    isObject = __webpack_require__(105),
	    keys = __webpack_require__(128);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/** Used to identify `toStringTag` values supported by `_.clone`. */
	var cloneableTags = {};
	cloneableTags[argsTag] = cloneableTags[arrayTag] =
	cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	cloneableTags[boolTag] = cloneableTags[dateTag] =
	cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	cloneableTags[int32Tag] = cloneableTags[mapTag] =
	cloneableTags[numberTag] = cloneableTags[objectTag] =
	cloneableTags[regexpTag] = cloneableTags[setTag] =
	cloneableTags[stringTag] = cloneableTags[symbolTag] =
	cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	cloneableTags[errorTag] = cloneableTags[funcTag] =
	cloneableTags[weakMapTag] = false;

	/**
	 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	 * traversed objects.
	 *
	 * @private
	 * @param {*} value The value to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @param {boolean} [isFull] Specify a clone including symbols.
	 * @param {Function} [customizer] The function to customize cloning.
	 * @param {string} [key] The key of `value`.
	 * @param {Object} [object] The parent object of `value`.
	 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	 * @returns {*} Returns the cloned value.
	 */
	function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
	  var result;
	  if (customizer) {
	    result = object ? customizer(value, key, object, stack) : customizer(value);
	  }
	  if (result !== undefined) {
	    return result;
	  }
	  if (!isObject(value)) {
	    return value;
	  }
	  var isArr = isArray(value);
	  if (isArr) {
	    result = initCloneArray(value);
	    if (!isDeep) {
	      return copyArray(value, result);
	    }
	  } else {
	    var tag = getTag(value),
	        isFunc = tag == funcTag || tag == genTag;

	    if (isBuffer(value)) {
	      return cloneBuffer(value, isDeep);
	    }
	    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	      if (isHostObject(value)) {
	        return object ? value : {};
	      }
	      result = initCloneObject(isFunc ? {} : value);
	      if (!isDeep) {
	        return copySymbols(value, baseAssign(result, value));
	      }
	    } else {
	      if (!cloneableTags[tag]) {
	        return object ? value : {};
	      }
	      result = initCloneByTag(value, tag, baseClone, isDeep);
	    }
	  }
	  // Check for circular references and return its corresponding clone.
	  stack || (stack = new Stack);
	  var stacked = stack.get(value);
	  if (stacked) {
	    return stacked;
	  }
	  stack.set(value, result);

	  if (!isArr) {
	    var props = isFull ? getAllKeys(value) : keys(value);
	  }
	  // Recursively populate clone (susceptible to call stack limits).
	  arrayEach(props || value, function(subValue, key) {
	    if (props) {
	      key = subValue;
	      subValue = value[key];
	    }
	    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
	  });
	  return result;
	}

	module.exports = baseClone;


/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(135),
	    stackClear = __webpack_require__(142),
	    stackDelete = __webpack_require__(143),
	    stackGet = __webpack_require__(144),
	    stackHas = __webpack_require__(145),
	    stackSet = __webpack_require__(146);

	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  this.__data__ = new ListCache(entries);
	}

	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;

	module.exports = Stack;


/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(136),
	    listCacheDelete = __webpack_require__(137),
	    listCacheGet = __webpack_require__(139),
	    listCacheHas = __webpack_require__(140),
	    listCacheSet = __webpack_require__(141);

	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;

	module.exports = ListCache;


/***/ },
/* 136 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	}

	module.exports = listCacheClear;


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(138);

	/** Used for built-in method references. */
	var arrayProto = Array.prototype;

	/** Built-in value references. */
	var splice = arrayProto.splice;

	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  return true;
	}

	module.exports = listCacheDelete;


/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(95);

	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}

	module.exports = assocIndexOf;


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(138);

	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  return index < 0 ? undefined : data[index][1];
	}

	module.exports = listCacheGet;


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(138);

	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}

	module.exports = listCacheHas;


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(138);

	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}

	module.exports = listCacheSet;


/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(135);

	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	}

	module.exports = stackClear;


/***/ },
/* 143 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  return this.__data__['delete'](key);
	}

	module.exports = stackDelete;


/***/ },
/* 144 */
/***/ function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}

	module.exports = stackGet;


/***/ },
/* 145 */
/***/ function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}

	module.exports = stackHas;


/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(135),
	    MapCache = __webpack_require__(147);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var cache = this.__data__;
	  if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {
	    cache = this.__data__ = new MapCache(cache.__data__);
	  }
	  cache.set(key, value);
	  return this;
	}

	module.exports = stackSet;


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(148),
	    mapCacheDelete = __webpack_require__(164),
	    mapCacheGet = __webpack_require__(167),
	    mapCacheHas = __webpack_require__(168),
	    mapCacheSet = __webpack_require__(169);

	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;

	module.exports = MapCache;


/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(149),
	    ListCache = __webpack_require__(135),
	    Map = __webpack_require__(163);

	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}

	module.exports = mapCacheClear;


/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(150),
	    hashDelete = __webpack_require__(159),
	    hashGet = __webpack_require__(160),
	    hashHas = __webpack_require__(161),
	    hashSet = __webpack_require__(162);

	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;

	module.exports = Hash;


/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(151);

	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	}

	module.exports = hashClear;


/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(152);

	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');

	module.exports = nativeCreate;


/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(153),
	    getValue = __webpack_require__(158);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(104),
	    isHostObject = __webpack_require__(154),
	    isMasked = __webpack_require__(155),
	    isObject = __webpack_require__(105),
	    toSource = __webpack_require__(157);

	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}

	module.exports = baseIsNative;


/***/ },
/* 154 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}

	module.exports = isHostObject;


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(156);

	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());

	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}

	module.exports = isMasked;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(117);

	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];

	module.exports = coreJsData;


/***/ },
/* 157 */
/***/ function(module, exports) {

	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;

	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to process.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}

	module.exports = toSource;


/***/ },
/* 158 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}

	module.exports = getValue;


/***/ },
/* 159 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  return this.has(key) && delete this.__data__[key];
	}

	module.exports = hashDelete;


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(151);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}

	module.exports = hashGet;


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(151);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}

	module.exports = hashHas;


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(151);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}

	module.exports = hashSet;


/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(152),
	    root = __webpack_require__(117);

	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');

	module.exports = Map;


/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(165);

	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  return getMapData(this, key)['delete'](key);
	}

	module.exports = mapCacheDelete;


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(166);

	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}

	module.exports = getMapData;


/***/ },
/* 166 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}

	module.exports = isKeyable;


/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(165);

	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}

	module.exports = mapCacheGet;


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(165);

	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}

	module.exports = mapCacheHas;


/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(165);

	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  getMapData(this, key).set(key, value);
	  return this;
	}

	module.exports = mapCacheSet;


/***/ },
/* 170 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array ? array.length : 0;

	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}

	module.exports = arrayEach;


/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(97),
	    keys = __webpack_require__(128);

	/**
	 * The base implementation of `_.assign` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssign(object, source) {
	  return object && copyObject(source, keys(source), object);
	}

	module.exports = baseAssign;


/***/ },
/* 172 */
/***/ function(module, exports) {

	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var result = new buffer.constructor(buffer.length);
	  buffer.copy(result);
	  return result;
	}

	module.exports = cloneBuffer;


/***/ },
/* 173 */
/***/ function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;

	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}

	module.exports = copyArray;


/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(97),
	    getSymbols = __webpack_require__(175);

	/**
	 * Copies own symbol properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbols(source, object) {
	  return copyObject(source, getSymbols(source), object);
	}

	module.exports = copySymbols;


/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	var stubArray = __webpack_require__(176);

	/** Built-in value references. */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;

	/**
	 * Creates an array of the own enumerable symbol properties of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	function getSymbols(object) {
	  // Coerce `object` to an object to avoid non-object errors in V8.
	  // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.
	  return getOwnPropertySymbols(Object(object));
	}

	// Fallback for IE < 11.
	if (!getOwnPropertySymbols) {
	  getSymbols = stubArray;
	}

	module.exports = getSymbols;


/***/ },
/* 176 */
/***/ function(module, exports) {

	/**
	 * A method that returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}

	module.exports = stubArray;


/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(178),
	    getSymbols = __webpack_require__(175),
	    keys = __webpack_require__(128);

	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}

	module.exports = getAllKeys;


/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(179),
	    isArray = __webpack_require__(124);

	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}

	module.exports = baseGetAllKeys;


/***/ },
/* 179 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;

	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}

	module.exports = arrayPush;


/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(181),
	    Map = __webpack_require__(163),
	    Promise = __webpack_require__(182),
	    Set = __webpack_require__(183),
	    WeakMap = __webpack_require__(184),
	    toSource = __webpack_require__(157);

	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';

	var dataViewTag = '[object DataView]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);

	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function getTag(value) {
	  return objectToString.call(value);
	}

	// Fallback for data views, maps, sets, and weak maps in IE 11,
	// for data views in Edge, and promises in Node.js.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = objectToString.call(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : undefined;

	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}

	module.exports = getTag;


/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(152),
	    root = __webpack_require__(117);

	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');

	module.exports = DataView;


/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(152),
	    root = __webpack_require__(117);

	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');

	module.exports = Promise;


/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(152),
	    root = __webpack_require__(117);

	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');

	module.exports = Set;


/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(152),
	    root = __webpack_require__(117);

	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');

	module.exports = WeakMap;


/***/ },
/* 185 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Initializes an array clone.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the initialized clone.
	 */
	function initCloneArray(array) {
	  var length = array.length,
	      result = array.constructor(length);

	  // Add properties assigned by `RegExp#exec`.
	  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	    result.index = array.index;
	    result.input = array.input;
	  }
	  return result;
	}

	module.exports = initCloneArray;


/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(187),
	    cloneDataView = __webpack_require__(189),
	    cloneMap = __webpack_require__(190),
	    cloneRegExp = __webpack_require__(194),
	    cloneSet = __webpack_require__(195),
	    cloneSymbol = __webpack_require__(198),
	    cloneTypedArray = __webpack_require__(200);

	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/**
	 * Initializes an object clone based on its `toStringTag`.
	 *
	 * **Note:** This function only supports cloning values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @param {string} tag The `toStringTag` of the object to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneByTag(object, tag, cloneFunc, isDeep) {
	  var Ctor = object.constructor;
	  switch (tag) {
	    case arrayBufferTag:
	      return cloneArrayBuffer(object);

	    case boolTag:
	    case dateTag:
	      return new Ctor(+object);

	    case dataViewTag:
	      return cloneDataView(object, isDeep);

	    case float32Tag: case float64Tag:
	    case int8Tag: case int16Tag: case int32Tag:
	    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	      return cloneTypedArray(object, isDeep);

	    case mapTag:
	      return cloneMap(object, isDeep, cloneFunc);

	    case numberTag:
	    case stringTag:
	      return new Ctor(object);

	    case regexpTag:
	      return cloneRegExp(object);

	    case setTag:
	      return cloneSet(object, isDeep, cloneFunc);

	    case symbolTag:
	      return cloneSymbol(object);
	  }
	}

	module.exports = initCloneByTag;


/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(188);

	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}

	module.exports = cloneArrayBuffer;


/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(117);

	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;

	module.exports = Uint8Array;


/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(187);

	/**
	 * Creates a clone of `dataView`.
	 *
	 * @private
	 * @param {Object} dataView The data view to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned data view.
	 */
	function cloneDataView(dataView, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	}

	module.exports = cloneDataView;


/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	var addMapEntry = __webpack_require__(191),
	    arrayReduce = __webpack_require__(192),
	    mapToArray = __webpack_require__(193);

	/**
	 * Creates a clone of `map`.
	 *
	 * @private
	 * @param {Object} map The map to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned map.
	 */
	function cloneMap(map, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
	  return arrayReduce(array, addMapEntry, new map.constructor);
	}

	module.exports = cloneMap;


/***/ },
/* 191 */
/***/ function(module, exports) {

	/**
	 * Adds the key-value `pair` to `map`.
	 *
	 * @private
	 * @param {Object} map The map to modify.
	 * @param {Array} pair The key-value pair to add.
	 * @returns {Object} Returns `map`.
	 */
	function addMapEntry(map, pair) {
	  // Don't return `Map#set` because it doesn't return the map instance in IE 11.
	  map.set(pair[0], pair[1]);
	  return map;
	}

	module.exports = addMapEntry;


/***/ },
/* 192 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.reduce` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @param {boolean} [initAccum] Specify using the first element of `array` as
	 *  the initial value.
	 * @returns {*} Returns the accumulated value.
	 */
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array ? array.length : 0;

	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}

	module.exports = arrayReduce;


/***/ },
/* 193 */
/***/ function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);

	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}

	module.exports = mapToArray;


/***/ },
/* 194 */
/***/ function(module, exports) {

	/** Used to match `RegExp` flags from their coerced string values. */
	var reFlags = /\w*$/;

	/**
	 * Creates a clone of `regexp`.
	 *
	 * @private
	 * @param {Object} regexp The regexp to clone.
	 * @returns {Object} Returns the cloned regexp.
	 */
	function cloneRegExp(regexp) {
	  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	  result.lastIndex = regexp.lastIndex;
	  return result;
	}

	module.exports = cloneRegExp;


/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	var addSetEntry = __webpack_require__(196),
	    arrayReduce = __webpack_require__(192),
	    setToArray = __webpack_require__(197);

	/**
	 * Creates a clone of `set`.
	 *
	 * @private
	 * @param {Object} set The set to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned set.
	 */
	function cloneSet(set, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
	  return arrayReduce(array, addSetEntry, new set.constructor);
	}

	module.exports = cloneSet;


/***/ },
/* 196 */
/***/ function(module, exports) {

	/**
	 * Adds `value` to `set`.
	 *
	 * @private
	 * @param {Object} set The set to modify.
	 * @param {*} value The value to add.
	 * @returns {Object} Returns `set`.
	 */
	function addSetEntry(set, value) {
	  set.add(value);
	  return set;
	}

	module.exports = addSetEntry;


/***/ },
/* 197 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);

	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}

	module.exports = setToArray;


/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(199);

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

	/**
	 * Creates a clone of the `symbol` object.
	 *
	 * @private
	 * @param {Object} symbol The symbol object to clone.
	 * @returns {Object} Returns the cloned symbol object.
	 */
	function cloneSymbol(symbol) {
	  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	}

	module.exports = cloneSymbol;


/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(117);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(187);

	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}

	module.exports = cloneTypedArray;


/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(202),
	    getPrototype = __webpack_require__(130),
	    isPrototype = __webpack_require__(126);

	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}

	module.exports = initCloneObject;


/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(105);

	/** Built-in value references. */
	var objectCreate = Object.create;

	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} prototype The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	function baseCreate(proto) {
	  return isObject(proto) ? objectCreate(proto) : {};
	}

	module.exports = baseCreate;


/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(117),
	    stubFalse = __webpack_require__(204);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;

	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = !Buffer ? stubFalse : function(value) {
	  return value instanceof Buffer;
	};

	module.exports = isBuffer;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)(module)))

/***/ },
/* 204 */
/***/ function(module, exports) {

	/**
	 * A method that returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}

	module.exports = stubFalse;


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray2 = __webpack_require__(206);

	var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

	exports.default = createHttpClient;

	var _qs = __webpack_require__(213);

	var _qs2 = _interopRequireDefault(_qs);

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _assign = __webpack_require__(127);

	var _assign2 = _interopRequireDefault(_assign);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Create pre configured axios instance
	 * @private
	 * @param {Object} axios - Axios library
	 * @param {Object} httpClientParams - Initialization parameters for the HTTP client
	 * @prop {string} space - Space ID
	 * @prop {string} accessToken - Access Token
	 * @prop {boolean=} insecure - If we should use http instead
	 * @prop {string=} host - Alternate host
	 * @prop {Object=} agent - HTTP agent for node
	 * @prop {Object=} headers - Additional headers
	 * @return {Object} Initialized axios instance
	 */
	function createHttpClient(axios, httpClientParams) {
	  var space = httpClientParams.space;
	  var accessToken = httpClientParams.accessToken;
	  var insecure = httpClientParams.insecure;
	  var host = httpClientParams.host;
	  var defaultHostname = httpClientParams.defaultHostname;
	  var agent = httpClientParams.agent;
	  var headers = httpClientParams.headers;

	  var _ref = host && host.split(':') || [];

	  var _ref2 = (0, _slicedToArray3.default)(_ref, 2);

	  var hostname = _ref2[0];
	  var port = _ref2[1];

	  hostname = hostname || defaultHostname;
	  port = port || (insecure ? 80 : 443);
	  var baseURL = (insecure ? 'http' : 'https') + '://' + hostname + ':' + port + '/spaces/';
	  if (space) {
	    baseURL += space + '/';
	  }
	  headers = headers || {};
	  headers['Authorization'] = 'Bearer ' + accessToken;

	  // Set these headers only for node because browsers don't like it when you
	  // override user-agent or accept-encoding.
	  // The SDKs should set their own X-Contentful-User-Agent.
	  if (process && process.release && process.release.name === 'node') {
	    headers['user-agent'] = 'node.js/' + process.version;
	    headers['Accept-Encoding'] = 'gzip';
	  }

	  var instance = axios.create({
	    baseURL: baseURL,
	    headers: headers,
	    agent: agent,
	    paramsSerializer: _qs2.default.stringify
	  });
	  instance.httpClientParams = httpClientParams;

	  /**
	   * Creates a new axios instance with the same default base parameters as the
	   * current one, and with any overrides passed to the newParams object
	   * This is useful as the SDKs use dependency injection to get the axios library
	   * and the version of the library comes from different places depending
	   * on whether it's a browser build or a node.js build.
	   * @private
	   * @param {Object} httpClientParams - Initialization parameters for the HTTP client
	   * @return {Object} Initialized axios instance
	   */
	  instance.cloneWithNewParams = function (newParams) {
	    return createHttpClient(axios, (0, _assign2.default)((0, _cloneDeep2.default)(httpClientParams), newParams));
	  };

	  return instance;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _isIterable2 = __webpack_require__(207);

	var _isIterable3 = _interopRequireDefault(_isIterable2);

	var _getIterator2 = __webpack_require__(210);

	var _getIterator3 = _interopRequireDefault(_getIterator2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  function sliceIterator(arr, i) {
	    var _arr = [];
	    var _n = true;
	    var _d = false;
	    var _e = undefined;

	    try {
	      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
	        _arr.push(_s.value);

	        if (i && _arr.length === i) break;
	      }
	    } catch (err) {
	      _d = true;
	      _e = err;
	    } finally {
	      try {
	        if (!_n && _i["return"]) _i["return"]();
	      } finally {
	        if (_d) throw _e;
	      }
	    }

	    return _arr;
	  }

	  return function (arr, i) {
	    if (Array.isArray(arr)) {
	      return arr;
	    } else if ((0, _isIterable3.default)(Object(arr))) {
	      return sliceIterator(arr, i);
	    } else {
	      throw new TypeError("Invalid attempt to destructure non-iterable instance");
	    }
	  };
	}();

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(208), __esModule: true };

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(53);
	__webpack_require__(10);
	module.exports = __webpack_require__(209);

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(58)
	  , ITERATOR  = __webpack_require__(50)('iterator')
	  , Iterators = __webpack_require__(32);
	module.exports = __webpack_require__(6).isIterable = function(it){
	  var O = Object(it);
	  return O[ITERATOR] !== undefined
	    || '@@iterator' in O
	    || Iterators.hasOwnProperty(classof(O));
	};

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(211), __esModule: true };

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(53);
	__webpack_require__(10);
	module.exports = __webpack_require__(212);

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(22)
	  , get      = __webpack_require__(63);
	module.exports = __webpack_require__(6).getIterator = function(it){
	  var iterFn = get(it);
	  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');
	  return anObject(iterFn.call(it));
	};

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Stringify = __webpack_require__(214);
	var Parse = __webpack_require__(216);

	module.exports = {
	    stringify: Stringify,
	    parse: Parse
	};


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Utils = __webpack_require__(215);

	var arrayPrefixGenerators = {
	    brackets: function brackets(prefix) {
	        return prefix + '[]';
	    },
	    indices: function indices(prefix, key) {
	        return prefix + '[' + key + ']';
	    },
	    repeat: function repeat(prefix) {
	        return prefix;
	    }
	};

	var defaults = {
	    delimiter: '&',
	    strictNullHandling: false,
	    skipNulls: false,
	    encode: true,
	    encoder: Utils.encode
	};

	var stringify = function stringify(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots) {
	    var obj = object;
	    if (typeof filter === 'function') {
	        obj = filter(prefix, obj);
	    } else if (obj instanceof Date) {
	        obj = obj.toISOString();
	    } else if (obj === null) {
	        if (strictNullHandling) {
	            return encoder ? encoder(prefix) : prefix;
	        }

	        obj = '';
	    }

	    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || Utils.isBuffer(obj)) {
	        if (encoder) {
	            return [encoder(prefix) + '=' + encoder(obj)];
	        }
	        return [prefix + '=' + String(obj)];
	    }

	    var values = [];

	    if (typeof obj === 'undefined') {
	        return values;
	    }

	    var objKeys;
	    if (Array.isArray(filter)) {
	        objKeys = filter;
	    } else {
	        var keys = Object.keys(obj);
	        objKeys = sort ? keys.sort(sort) : keys;
	    }

	    for (var i = 0; i < objKeys.length; ++i) {
	        var key = objKeys[i];

	        if (skipNulls && obj[key] === null) {
	            continue;
	        }

	        if (Array.isArray(obj)) {
	            values = values.concat(stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));
	        } else {
	            values = values.concat(stringify(obj[key], prefix + (allowDots ? '.' + key : '[' + key + ']'), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));
	        }
	    }

	    return values;
	};

	module.exports = function (object, opts) {
	    var obj = object;
	    var options = opts || {};
	    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;
	    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;
	    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;
	    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;
	    var encoder = encode ? (typeof options.encoder === 'function' ? options.encoder : defaults.encoder) : null;
	    var sort = typeof options.sort === 'function' ? options.sort : null;
	    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;
	    var objKeys;
	    var filter;

	    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {
	        throw new TypeError('Encoder has to be a function.');
	    }

	    if (typeof options.filter === 'function') {
	        filter = options.filter;
	        obj = filter('', obj);
	    } else if (Array.isArray(options.filter)) {
	        objKeys = filter = options.filter;
	    }

	    var keys = [];

	    if (typeof obj !== 'object' || obj === null) {
	        return '';
	    }

	    var arrayFormat;
	    if (options.arrayFormat in arrayPrefixGenerators) {
	        arrayFormat = options.arrayFormat;
	    } else if ('indices' in options) {
	        arrayFormat = options.indices ? 'indices' : 'repeat';
	    } else {
	        arrayFormat = 'indices';
	    }

	    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

	    if (!objKeys) {
	        objKeys = Object.keys(obj);
	    }

	    if (sort) {
	        objKeys.sort(sort);
	    }

	    for (var i = 0; i < objKeys.length; ++i) {
	        var key = objKeys[i];

	        if (skipNulls && obj[key] === null) {
	            continue;
	        }

	        keys = keys.concat(stringify(obj[key], key, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));
	    }

	    return keys.join(delimiter);
	};


/***/ },
/* 215 */
/***/ function(module, exports) {

	'use strict';

	var hexTable = (function () {
	    var array = new Array(256);
	    for (var i = 0; i < 256; ++i) {
	        array[i] = '%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase();
	    }

	    return array;
	}());

	exports.arrayToObject = function (source, options) {
	    var obj = options.plainObjects ? Object.create(null) : {};
	    for (var i = 0; i < source.length; ++i) {
	        if (typeof source[i] !== 'undefined') {
	            obj[i] = source[i];
	        }
	    }

	    return obj;
	};

	exports.merge = function (target, source, options) {
	    if (!source) {
	        return target;
	    }

	    if (typeof source !== 'object') {
	        if (Array.isArray(target)) {
	            target.push(source);
	        } else if (typeof target === 'object') {
	            target[source] = true;
	        } else {
	            return [target, source];
	        }

	        return target;
	    }

	    if (typeof target !== 'object') {
	        return [target].concat(source);
	    }

	    var mergeTarget = target;
	    if (Array.isArray(target) && !Array.isArray(source)) {
	        mergeTarget = exports.arrayToObject(target, options);
	    }

	    return Object.keys(source).reduce(function (acc, key) {
	        var value = source[key];

	        if (Object.prototype.hasOwnProperty.call(acc, key)) {
	            acc[key] = exports.merge(acc[key], value, options);
	        } else {
	            acc[key] = value;
	        }
	        return acc;
	    }, mergeTarget);
	};

	exports.decode = function (str) {
	    try {
	        return decodeURIComponent(str.replace(/\+/g, ' '));
	    } catch (e) {
	        return str;
	    }
	};

	exports.encode = function (str) {
	    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
	    // It has been adapted here for stricter adherence to RFC 3986
	    if (str.length === 0) {
	        return str;
	    }

	    var string = typeof str === 'string' ? str : String(str);

	    var out = '';
	    for (var i = 0; i < string.length; ++i) {
	        var c = string.charCodeAt(i);

	        if (
	            c === 0x2D || // -
	            c === 0x2E || // .
	            c === 0x5F || // _
	            c === 0x7E || // ~
	            (c >= 0x30 && c <= 0x39) || // 0-9
	            (c >= 0x41 && c <= 0x5A) || // a-z
	            (c >= 0x61 && c <= 0x7A) // A-Z
	        ) {
	            out += string.charAt(i);
	            continue;
	        }

	        if (c < 0x80) {
	            out = out + hexTable[c];
	            continue;
	        }

	        if (c < 0x800) {
	            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
	            continue;
	        }

	        if (c < 0xD800 || c >= 0xE000) {
	            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
	            continue;
	        }

	        i += 1;
	        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
	        out += hexTable[0xF0 | (c >> 18)] + hexTable[0x80 | ((c >> 12) & 0x3F)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)];
	    }

	    return out;
	};

	exports.compact = function (obj, references) {
	    if (typeof obj !== 'object' || obj === null) {
	        return obj;
	    }

	    var refs = references || [];
	    var lookup = refs.indexOf(obj);
	    if (lookup !== -1) {
	        return refs[lookup];
	    }

	    refs.push(obj);

	    if (Array.isArray(obj)) {
	        var compacted = [];

	        for (var i = 0; i < obj.length; ++i) {
	            if (obj[i] && typeof obj[i] === 'object') {
	                compacted.push(exports.compact(obj[i], refs));
	            } else if (typeof obj[i] !== 'undefined') {
	                compacted.push(obj[i]);
	            }
	        }

	        return compacted;
	    }

	    var keys = Object.keys(obj);
	    for (var j = 0; j < keys.length; ++j) {
	        var key = keys[j];
	        obj[key] = exports.compact(obj[key], refs);
	    }

	    return obj;
	};

	exports.isRegExp = function (obj) {
	    return Object.prototype.toString.call(obj) === '[object RegExp]';
	};

	exports.isBuffer = function (obj) {
	    if (obj === null || typeof obj === 'undefined') {
	        return false;
	    }

	    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
	};


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Utils = __webpack_require__(215);

	var defaults = {
	    delimiter: '&',
	    depth: 5,
	    arrayLimit: 20,
	    parameterLimit: 1000,
	    strictNullHandling: false,
	    plainObjects: false,
	    allowPrototypes: false,
	    allowDots: false,
	    decoder: Utils.decode
	};

	var parseValues = function parseValues(str, options) {
	    var obj = {};
	    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);

	    for (var i = 0; i < parts.length; ++i) {
	        var part = parts[i];
	        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;

	        if (pos === -1) {
	            obj[options.decoder(part)] = '';

	            if (options.strictNullHandling) {
	                obj[options.decoder(part)] = null;
	            }
	        } else {
	            var key = options.decoder(part.slice(0, pos));
	            var val = options.decoder(part.slice(pos + 1));

	            if (Object.prototype.hasOwnProperty.call(obj, key)) {
	                obj[key] = [].concat(obj[key]).concat(val);
	            } else {
	                obj[key] = val;
	            }
	        }
	    }

	    return obj;
	};

	var parseObject = function parseObject(chain, val, options) {
	    if (!chain.length) {
	        return val;
	    }

	    var root = chain.shift();

	    var obj;
	    if (root === '[]') {
	        obj = [];
	        obj = obj.concat(parseObject(chain, val, options));
	    } else {
	        obj = options.plainObjects ? Object.create(null) : {};
	        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;
	        var index = parseInt(cleanRoot, 10);
	        if (
	            !isNaN(index) &&
	            root !== cleanRoot &&
	            String(index) === cleanRoot &&
	            index >= 0 &&
	            (options.parseArrays && index <= options.arrayLimit)
	        ) {
	            obj = [];
	            obj[index] = parseObject(chain, val, options);
	        } else {
	            obj[cleanRoot] = parseObject(chain, val, options);
	        }
	    }

	    return obj;
	};

	var parseKeys = function parseKeys(givenKey, val, options) {
	    if (!givenKey) {
	        return;
	    }

	    // Transform dot notation to bracket notation
	    var key = options.allowDots ? givenKey.replace(/\.([^\.\[]+)/g, '[$1]') : givenKey;

	    // The regex chunks

	    var parent = /^([^\[\]]*)/;
	    var child = /(\[[^\[\]]*\])/g;

	    // Get the parent

	    var segment = parent.exec(key);

	    // Stash the parent if it exists

	    var keys = [];
	    if (segment[1]) {
	        // If we aren't using plain objects, optionally prefix keys
	        // that would overwrite object prototype properties
	        if (!options.plainObjects && Object.prototype.hasOwnProperty(segment[1])) {
	            if (!options.allowPrototypes) {
	                return;
	            }
	        }

	        keys.push(segment[1]);
	    }

	    // Loop through children appending to the array until we hit depth

	    var i = 0;
	    while ((segment = child.exec(key)) !== null && i < options.depth) {
	        i += 1;
	        if (!options.plainObjects && Object.prototype.hasOwnProperty(segment[1].replace(/\[|\]/g, ''))) {
	            if (!options.allowPrototypes) {
	                continue;
	            }
	        }
	        keys.push(segment[1]);
	    }

	    // If there's a remainder, just add whatever is left

	    if (segment) {
	        keys.push('[' + key.slice(segment.index) + ']');
	    }

	    return parseObject(keys, val, options);
	};

	module.exports = function (str, opts) {
	    var options = opts || {};

	    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {
	        throw new TypeError('Decoder has to be a function.');
	    }

	    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;
	    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;
	    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;
	    options.parseArrays = options.parseArrays !== false;
	    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;
	    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;
	    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;
	    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;
	    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;
	    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;

	    if (str === '' || str === null || typeof str === 'undefined') {
	        return options.plainObjects ? Object.create(null) : {};
	    }

	    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
	    var obj = options.plainObjects ? Object.create(null) : {};

	    // Iterate over the keys and setup the new object

	    var keys = Object.keys(tempObj);
	    for (var i = 0; i < keys.length; ++i) {
	        var key = keys[i];
	        var newObj = parseKeys(key, tempObj[key], options);
	        obj = Utils.merge(obj, newObj, options);
	    }

	    return Utils.compact(obj);
	};


/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = wrapHttpClient;

	var _reduce = __webpack_require__(218);

	var _reduce2 = _interopRequireDefault(_reduce);

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _rateLimit = __webpack_require__(257);

	var _rateLimit2 = _interopRequireDefault(_rateLimit);

	var _createBackoff = __webpack_require__(259);

	var _createBackoff2 = _interopRequireDefault(_createBackoff);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Wraps the http client with a rate limiter, and a backoff functionality.
	 * The rate limiter queues calls and attempts to prevent the server side rate
	 * limit from ever being hit.
	 * The backoff is triggered if a 429 Too Many Requests error is received from
	 * the server, and every time if it is received repeateadly the wait time
	 * for the next try will increase exponentially.
	 * @private
	 * @param {Object} http - HTTP Client instances
	 * @param {Object} options - Options for the wrapper methods
	 * @prop {number} concurrency - Number of allowed concurrent requests
	 * @prop {number} delay - Delay in milliseconds for waiting after hitting the
	 * allowed number of concurrent requests
	 * @prop {number} maxRetries - Maximum number of retries when a 429 is received
	 * @prop {boolean} retryOnTooManyRequests - If we should retry on 429s
	 */
	function wrapHttpClient(http, _ref) {
	  var concurrency = _ref.concurrency;
	  var delay = _ref.delay;
	  var maxRetries = _ref.maxRetries;
	  var retryOnTooManyRequests = _ref.retryOnTooManyRequests;

	  return (0, _reduce2.default)(['get', 'post', 'put', 'delete', 'patch', 'head'], function (http, methodName) {
	    var httpCall = http[methodName].bind(http);
	    if (retryOnTooManyRequests) {
	      httpCall = maybeBackoff(httpCall, maxRetries);
	    }
	    http[methodName] = (0, _rateLimit2.default)(httpCall, concurrency, delay);
	    return http;
	  }, (0, _cloneDeep2.default)(http));
	}

	function maybeBackoff(fn, maxRetries) {
	  return function httpCall() {
	    var self = this;
	    self.backoff = self.backoff || (0, _createBackoff2.default)(maxRetries);
	    var args = Array.prototype.slice.call(arguments);
	    var response = fn.apply(self, args);

	    response = response.catch(function (error) {
	      // Rate-limited by the server, maybe backoff and retry
	      if (error.status === 429) {
	        return self.backoff(error, function () {
	          return httpCall.apply(self, args);
	        });
	      }
	      throw error;
	    });

	    return response;
	  };
	}

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(192),
	    baseEach = __webpack_require__(219),
	    baseIteratee = __webpack_require__(224),
	    baseReduce = __webpack_require__(256),
	    isArray = __webpack_require__(124);

	/**
	 * Reduces `collection` to a value which is the accumulated result of running
	 * each element in `collection` thru `iteratee`, where each successive
	 * invocation is supplied the return value of the previous. If `accumulator`
	 * is not given, the first element of `collection` is used as the initial
	 * value. The iteratee is invoked with four arguments:
	 * (accumulator, value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.reduce`, `_.reduceRight`, and `_.transform`.
	 *
	 * The guarded methods are:
	 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	 * and `sortBy`
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @returns {*} Returns the accumulated value.
	 * @see _.reduceRight
	 * @example
	 *
	 * _.reduce([1, 2], function(sum, n) {
	 *   return sum + n;
	 * }, 0);
	 * // => 3
	 *
	 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	 *   (result[value] || (result[value] = [])).push(key);
	 *   return result;
	 * }, {});
	 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	 */
	function reduce(collection, iteratee, accumulator) {
	  var func = isArray(collection) ? arrayReduce : baseReduce,
	      initAccum = arguments.length < 3;

	  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	}

	module.exports = reduce;


/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(220),
	    createBaseEach = __webpack_require__(223);

	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);

	module.exports = baseEach;


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(221),
	    keys = __webpack_require__(128);

	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}

	module.exports = baseForOwn;


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(222);

	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();

	module.exports = baseFor;


/***/ },
/* 222 */
/***/ function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;

	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}

	module.exports = createBaseFor;


/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(101);

	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);

	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}

	module.exports = createBaseEach;


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(225),
	    baseMatchesProperty = __webpack_require__(240),
	    identity = __webpack_require__(253),
	    isArray = __webpack_require__(124),
	    property = __webpack_require__(254);

	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}

	module.exports = baseIteratee;


/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(226),
	    getMatchData = __webpack_require__(237),
	    matchesStrictComparable = __webpack_require__(239);

	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}

	module.exports = baseMatches;


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(134),
	    baseIsEqual = __webpack_require__(227);

	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;

	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;

	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];

	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}

	module.exports = baseIsMatch;


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(228),
	    isObject = __webpack_require__(105),
	    isObjectLike = __webpack_require__(113);

	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {boolean} [bitmask] The bitmask of comparison flags.
	 *  The bitmask may be composed of the following flags:
	 *     1 - Unordered comparison
	 *     2 - Partial comparison
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, customizer, bitmask, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	}

	module.exports = baseIsEqual;


/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(134),
	    equalArrays = __webpack_require__(229),
	    equalByTag = __webpack_require__(234),
	    equalObjects = __webpack_require__(235),
	    getTag = __webpack_require__(180),
	    isArray = __webpack_require__(124),
	    isHostObject = __webpack_require__(154),
	    isTypedArray = __webpack_require__(236);

	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = arrayTag,
	      othTag = arrayTag;

	  if (!objIsArr) {
	    objTag = getTag(object);
	    objTag = objTag == argsTag ? objectTag : objTag;
	  }
	  if (!othIsArr) {
	    othTag = getTag(other);
	    othTag = othTag == argsTag ? objectTag : othTag;
	  }
	  var objIsObj = objTag == objectTag && !isHostObject(object),
	      othIsObj = othTag == objectTag && !isHostObject(other),
	      isSameTag = objTag == othTag;

	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	  }
	  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;

	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	}

	module.exports = baseIsEqualDeep;


/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(230),
	    arraySome = __webpack_require__(233);

	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;

	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      arrLength = array.length,
	      othLength = other.length;

	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;

	  stack.set(array, other);

	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!seen.has(othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
	              return seen.add(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, customizer, bitmask, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  return result;
	}

	module.exports = equalArrays;


/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(147),
	    setCacheAdd = __webpack_require__(231),
	    setCacheHas = __webpack_require__(232);

	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values ? values.length : 0;

	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}

	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;

	module.exports = SetCache;


/***/ },
/* 231 */
/***/ function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}

	module.exports = setCacheAdd;


/***/ },
/* 232 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}

	module.exports = setCacheHas;


/***/ },
/* 233 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array ? array.length : 0;

	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}

	module.exports = arraySome;


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(199),
	    Uint8Array = __webpack_require__(188),
	    equalArrays = __webpack_require__(229),
	    mapToArray = __webpack_require__(193),
	    setToArray = __webpack_require__(197);

	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;

	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;

	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;

	    case boolTag:
	    case dateTag:
	      // Coerce dates and booleans to numbers, dates to milliseconds and
	      // booleans to `1` or `0` treating invalid dates coerced to `NaN` as
	      // not equal.
	      return +object == +other;

	    case errorTag:
	      return object.name == other.name && object.message == other.message;

	    case numberTag:
	      // Treat `NaN` vs. `NaN` as equal.
	      return (object != +object) ? other != +other : object == +other;

	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');

	    case mapTag:
	      var convert = mapToArray;

	    case setTag:
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	      convert || (convert = setToArray);

	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= UNORDERED_COMPARE_FLAG;
	      stack.set(object, other);

	      // Recursively compare objects (susceptible to call stack limits).
	      return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);

	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}

	module.exports = equalByTag;


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(129),
	    keys = __webpack_require__(128);

	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;

	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      objProps = keys(object),
	      objLength = objProps.length,
	      othProps = keys(other),
	      othLength = othProps.length;

	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : baseHas(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);

	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;

	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  return result;
	}

	module.exports = equalObjects;


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	var isLength = __webpack_require__(106),
	    isObjectLike = __webpack_require__(113);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	function isTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	}

	module.exports = isTypedArray;


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(238),
	    keys = __webpack_require__(128);

	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = keys(object),
	      length = result.length;

	  while (length--) {
	    var key = result[length],
	        value = object[key];

	    result[length] = [key, value, isStrictComparable(value)];
	  }
	  return result;
	}

	module.exports = getMatchData;


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(105);

	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}

	module.exports = isStrictComparable;


/***/ },
/* 239 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}

	module.exports = matchesStrictComparable;


/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(227),
	    get = __webpack_require__(241),
	    hasIn = __webpack_require__(250),
	    isKey = __webpack_require__(248),
	    isStrictComparable = __webpack_require__(238),
	    matchesStrictComparable = __webpack_require__(239),
	    toKey = __webpack_require__(249);

	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;

	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
	  };
	}

	module.exports = baseMatchesProperty;


/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(242);

	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is used in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}

	module.exports = get;


/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(243),
	    isKey = __webpack_require__(248),
	    toKey = __webpack_require__(249);

	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = isKey(path, object) ? [path] : castPath(path);

	  var index = 0,
	      length = path.length;

	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}

	module.exports = baseGet;


/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(124),
	    stringToPath = __webpack_require__(244);

	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value) {
	  return isArray(value) ? value : stringToPath(value);
	}

	module.exports = castPath;


/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(245),
	    toString = __webpack_require__(246);

	/** Used to match property names within property paths. */
	var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(\.|\[\])(?:\4|$))/g;

	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;

	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoize(function(string) {
	  var result = [];
	  toString(string).replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});

	module.exports = stringToPath;


/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(147);

	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;

	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result);
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}

	// Assign cache to `_.memoize`.
	memoize.Cache = MapCache;

	module.exports = memoize;


/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(247);

	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}

	module.exports = toString;


/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(199),
	    isSymbol = __webpack_require__(112);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;

	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = baseToString;


/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(124),
	    isSymbol = __webpack_require__(112);

	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;

	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}

	module.exports = isKey;


/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(112);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = toKey;


/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(251),
	    hasPath = __webpack_require__(252);

	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}

	module.exports = hasIn;


/***/ },
/* 251 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}

	module.exports = baseHasIn;


/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(243),
	    isArguments = __webpack_require__(122),
	    isArray = __webpack_require__(124),
	    isIndex = __webpack_require__(107),
	    isKey = __webpack_require__(248),
	    isLength = __webpack_require__(106),
	    isString = __webpack_require__(125),
	    toKey = __webpack_require__(249);

	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = isKey(path, object) ? [path] : castPath(path);

	  var result,
	      index = -1,
	      length = path.length;

	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result) {
	    return result;
	  }
	  var length = object ? object.length : 0;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isString(object) || isArguments(object));
	}

	module.exports = hasPath;


/***/ },
/* 253 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument given to it.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}

	module.exports = identity;


/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(103),
	    basePropertyDeep = __webpack_require__(255),
	    isKey = __webpack_require__(248),
	    toKey = __webpack_require__(249);

	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}

	module.exports = property;


/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(242);

	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}

	module.exports = basePropertyDeep;


/***/ },
/* 256 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.reduce` and `_.reduceRight`, without support
	 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} accumulator The initial value.
	 * @param {boolean} initAccum Specify using the first or last element of
	 *  `collection` as the initial value.
	 * @param {Function} eachFunc The function to iterate over `collection`.
	 * @returns {*} Returns the accumulated value.
	 */
	function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	  eachFunc(collection, function(value, index, collection) {
	    accumulator = initAccum
	      ? (initAccum = false, value)
	      : iteratee(accumulator, value, index, collection);
	  });
	  return accumulator;
	}

	module.exports = baseReduce;


/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _promise = __webpack_require__(7);

	var _promise2 = _interopRequireDefault(_promise);

	exports.default = rateLimit;

	var _promisedWait = __webpack_require__(258);

	var _promisedWait2 = _interopRequireDefault(_promisedWait);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Promise-based rate limiting of a function. Assumes that the passed in
	 * function will return a Promise.
	 * Queues calls made to the wrapped function, and if more calls are made than
	 * the allowed level of concurrency waits until a certain amount of time has
	 * passed before continuing to clear calls from the queue.
	 * @private
	 * @param {Function} fn - call to be rate limited
	 * @param {number} concurrency - Number of allowed concurrent requests
	 * @param {number} delay - Delay in milliseconds for waiting after hitting the
	 */
	function rateLimit(fn, concurrency, delay) {
	  concurrency = positiveInteger('concurrency', concurrency);
	  delay = positiveInteger('delay', delay);

	  var callQueue = [];
	  var inFlight = 0;

	  function shift() {
	    if (inFlight >= concurrency) {
	      return;
	    }

	    var start = new Date().getTime();

	    if (callQueue.length) {
	      var call = callQueue.shift();
	      inFlight++;

	      var result = void 0;
	      try {
	        // call the wrapped method
	        var tmp = _promise2.default.resolve(fn.apply(call.self, call.args));
	        // resolve the call with a possibly rejected promise
	        call.resolve(tmp);
	        // rate-limiting doesn't care about errors
	        result = tmp.catch(function () {});
	      } catch (err) {
	        call.reject(err);
	        result = _promise2.default.resolve();
	      }

	      // If this request completed faster than our rate-limit would
	      // allow, wait the appropriate amount of time before marking the
	      // request as finished.
	      result.then(maybeWait).then(goToNextCall);
	    }

	    function maybeWait() {
	      var duration = start - new Date().getTime();
	      if (duration < delay) {
	        return (0, _promisedWait2.default)(delay - duration);
	      }
	    }
	  }

	  function goToNextCall() {
	    inFlight--;
	    shift();
	  }

	  return function () /* wrapped method arguments */{
	    var self = this;
	    var args = Array.prototype.slice.call(arguments);
	    return new _promise2.default(function (resolve, reject) {
	      callQueue.push({
	        reject: reject,
	        resolve: resolve,
	        self: self,
	        args: args
	      });
	      shift();
	    });
	  };
	}

	function positiveInteger(name, value) {
	  value = parseInt(value, 10);
	  if (isNaN(value) || value < 1) {
	    throw new TypeError(name + ' must be a positive integer');
	  }
	  return value;
	}

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _promise = __webpack_require__(7);

	var _promise2 = _interopRequireDefault(_promise);

	exports.default = promisedWait;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function promisedWait(ms) {
	  return new _promise2.default(function (resolve) {
	    setTimeout(resolve, ms || 3000);
	  });
	}

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _promise = __webpack_require__(7);

	var _promise2 = _interopRequireDefault(_promise);

	exports.default = createBackoff;

	var _promisedWait = __webpack_require__(258);

	var _promisedWait2 = _interopRequireDefault(_promisedWait);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Returns a wrapper method which waits a given amount of time before calling
	 * wrapped method.
	 * If the call to the wrapped method fails, retries `maxRetries` times, and if
	 * all those fail, it returns a rejected promise.
	 * @private
	 * @param {number} maxRetries - max number of retries before aborting
	 */
	function createBackoff(maxRetries) {
	  var attempt = 0;
	  return function maybeRetry(error, retry) {
	    if (attempt < maxRetries) {
	      return (0, _promisedWait2.default)(Math.pow(2, attempt++) * 1000).then(retry);
	    } else {
	      return _promise2.default.reject(error);
	    }
	  };
	}

/***/ },
/* 260 */
/***/ function(module, exports) {

	'use strict';

	module.exports = '1.1.9';

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createSpaceApi;

	var _errorHandler = __webpack_require__(262);

	var _errorHandler2 = _interopRequireDefault(_errorHandler);

	var _entities = __webpack_require__(263);

	var _entities2 = _interopRequireDefault(_entities);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Creates API object with methods to access functionality from Contentful's
	 * Management API
	 * @private
	 * @param {Object} params - API initialization params
	 * @prop {Object} http - HTTP client instance
	 * @prop {Function} shouldLinksResolve - Link resolver preconfigured with global setting
	 * @return {ClientAPI}
	 */
	/**
	 * Contentful Management API Client. Contains methods which allow access to
	 * any operations that can be performed with a management token.
	 * @namespace ContentfulClientAPI
	 */

	/**
	 * Types for meta information found across the different entities in Contentful
	 * @namespace Meta
	 */

	/**
	 * System metadata. See <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/introduction/common-resource-attributes">Common Resource Attributes</a> for more details.
	 * @memberof Meta
	 * @typedef Sys
	 * @prop {string} type
	 * @prop {string} id
	 * @prop {Meta.Link} space
	 * @prop {string} createdAt
	 * @prop {string} updatedAt
	 * @prop {number} revision
	 */

	/**
	 * Link to another entity. See <a href="https://www.contentful.com/developers/docs/concepts/links/">Links</a> for more details.
	 * @memberof Meta
	 * @typedef Link
	 * @prop {string} type - type of this entity. Always link.
	 * @prop {string} id
	 * @prop {string} linkType - type of this link. If defined, either Entry or Asset
	 */

	/**
	 * @memberof ContentfulClientAPI
	 * @typedef {Object} ClientAPI
	 * @prop {function} getSpace
	 * @prop {function} getSpaces
	 * @prop {function} createSpace
	 */

	function createSpaceApi(_ref) {
	  var http = _ref.http;
	  var _entities$space = _entities2.default.space;
	  var wrapSpace = _entities$space.wrapSpace;
	  var wrapSpaceCollection = _entities$space.wrapSpaceCollection;

	  /**
	   * Gets all spaces
	   * @memberof ContentfulClientAPI
	   * @return {Promise<Space.SpaceCollection>} Promise for a collection of Spaces
	   * @example
	   * client.getSpaces()
	   * .then(spaces => console.log(spaces.items))
	   */

	  function getSpaces() {
	    return http.get('').then(function (response) {
	      return wrapSpaceCollection(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a space
	   * @memberof ContentfulClientAPI
	   * @param {string} id - Space ID
	   * @return {Promise<Space.Space>} Promise for a Space
	   * @example
	   * client.getSpace('spaceid')
	   * .then(space => console.log(space))
	   */
	  function getSpace(id) {
	    return http.get(id).then(function (response) {
	      return wrapSpace(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a space
	   * @memberof ContentfulClientAPI
	   * @see {Space.Space}
	   * @param {object} data - Object representation of the Space to be created
	   * @param {string=} organizationId - Organization ID, if the associated token can manage more than one organization.
	   * @return {Promise<Space.Space>} Promise for the newly created Space
	   * @example
	   * client.createSpace({name: 'Space Name'})
	   * .then(space => console.log(space))
	   */
	  function createSpace(data, organizationId) {
	    return http.post('', data, {
	      headers: organizationId ? { 'X-Contentful-Organization': organizationId } : {}
	    }).then(function (response) {
	      return wrapSpace(http, response.data);
	    }, _errorHandler2.default);
	  }

	  return {
	    getSpaces: getSpaces,
	    getSpace: getSpace,
	    createSpace: createSpace
	  };
	}

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _stringify = __webpack_require__(4);

	var _stringify2 = _interopRequireDefault(_stringify);

	exports.default = errorHandler;

	var _get = __webpack_require__(241);

	var _get2 = _interopRequireDefault(_get);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Errors received from server requests
	 * @memberof ContentfulClientAPI
	 * @typedef ErrorResponse
	 * @prop {string} name - Error name. Usually refers to the sys.id returned on the
	 * error server response. If that's not available or is unknown, it defaults to
	 * the HTTP error code and status text.
	 * @prop {string} message - Stringified JSON object with request information,
	 * HTTP response details and error details payload (if available). The `requestId`
	 * property is internal to Contentful and it can be used when contacting support
	 * about unusual errors.
	 */

	/**
	 * Handles errors received from the server. Parses the error into a more useful
	 * format, places it in an exception and throws it.
	 * See https://www.contentful.com/developers/docs/references/content-management-api/#/introduction/errors
	 * for more details on the data received on the errorResponse.data property
	 * and the expected error codes.
	 * @private
	 * @param {Object} errorResponse - Error received from an axios request
	 * @throws {ErrorResponse}
	 */
	function errorHandler(errorResponse) {
	  var data = errorResponse.data;
	  var status = errorResponse.status;
	  var statusText = errorResponse.statusText;
	  var config = errorResponse.config;

	  var errorData = {
	    request: {
	      url: config.url,
	      headers: config.headers,
	      method: config.method,
	      payloadData: config.data
	    },
	    status: status,
	    statusText: statusText
	  };
	  if ((0, _get2.default)(data, 'sys.type') === 'Error') {
	    errorData.message = data.message;
	    errorData.requestId = data.requestId;
	    if (data.details) {
	      errorData.details = data.details;
	    }
	  }
	  var error = new Error();
	  var errorName = (0, _get2.default)(data, 'sys.id');
	  error.name = errorName && errorName !== 'Unknown' ? errorName : status + ' ' + statusText;
	  error.message = (0, _stringify2.default)(errorData, null, '  ');
	  throw error;
	}

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _space = __webpack_require__(264);

	var space = _interopRequireWildcard(_space);

	var _entry = __webpack_require__(294);

	var entry = _interopRequireWildcard(_entry);

	var _asset = __webpack_require__(296);

	var asset = _interopRequireWildcard(_asset);

	var _contentType = __webpack_require__(300);

	var contentType = _interopRequireWildcard(_contentType);

	var _editorInterface = __webpack_require__(301);

	var editorInterface = _interopRequireWildcard(_editorInterface);

	var _locale = __webpack_require__(302);

	var locale = _interopRequireWildcard(_locale);

	var _webhook = __webpack_require__(303);

	var webhook = _interopRequireWildcard(_webhook);

	var _spaceMembership = __webpack_require__(304);

	var spaceMembership = _interopRequireWildcard(_spaceMembership);

	var _role = __webpack_require__(305);

	var role = _interopRequireWildcard(_role);

	var _apiKey = __webpack_require__(306);

	var apiKey = _interopRequireWildcard(_apiKey);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	exports.default = {
	  space: space,
	  entry: entry,
	  asset: asset,
	  contentType: contentType,
	  editorInterface: editorInterface,
	  locale: locale,
	  webhook: webhook,
	  spaceMembership: spaceMembership,
	  role: role,
	  apiKey: apiKey
	};

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.wrapSpace = wrapSpace;
	exports.wrapSpaceCollection = wrapSpaceCollection;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _freezeSys = __webpack_require__(265);

	var _freezeSys2 = _interopRequireDefault(_freezeSys);

	var _toPlainObject = __webpack_require__(273);

	var _toPlainObject2 = _interopRequireDefault(_toPlainObject);

	var _wrapHttpClient = __webpack_require__(217);

	var _wrapHttpClient2 = _interopRequireDefault(_wrapHttpClient);

	var _enhanceWithMethods = __webpack_require__(274);

	var _enhanceWithMethods2 = _interopRequireDefault(_enhanceWithMethods);

	var _createSpaceApi = __webpack_require__(278);

	var _createSpaceApi2 = _interopRequireDefault(_createSpaceApi);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @memberof Space
	 * @typedef Space
	 * @prop {Object} sys - System metadata
	 * @prop {string} sys.id - Space id
	 * @prop {string} sys.type - Entity type
	 * @prop {string} name - Space name
	 * @prop {Array<string>} locales - Array with locale codes
	 * @prop {function(): Object} toPlainObject() - Returns this Space as a plain JS object
	 */

	/**
	 * @memberof Space
	 * @typedef SpaceCollection
	 * @prop {number} total
	 * @prop {number} skip
	 * @prop {number} limit
	 * @prop {Array<Space.Space>} items
	 * @prop {function(): Object} toPlainObject() - Returns this Space collection as a plain JS object
	 */

	/**
	 * This method creates the API for the given space with all the methods for
	 * reading and creating other entities. It also passes down a clone of the
	 * http client with a space id, so the base path for requests now has the
	 * space id already set.
	 * @private
	 * @param  {Object} http - HTTP client instance
	 * @param  {Object} data - API response for a Space
	 * @return {Space}
	 */
	function wrapSpace(http, data) {
	  var space = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  var _http$httpClientParam = http.httpClientParams;
	  var rateLimit = _http$httpClientParam.rateLimit;
	  var rateLimitPeriod = _http$httpClientParam.rateLimitPeriod;
	  var maxRetries = _http$httpClientParam.maxRetries;
	  var retryOnTooManyRequests = _http$httpClientParam.retryOnTooManyRequests;

	  var httpClientParams = {
	    concurrency: rateLimit,
	    delay: rateLimitPeriod,
	    maxRetries: maxRetries,
	    retryOnTooManyRequests: retryOnTooManyRequests
	  };
	  var spaceScopedHttpClient = (0, _wrapHttpClient2.default)(http.cloneWithNewParams({
	    space: space.sys.id
	  }), httpClientParams);
	  var spaceApi = (0, _createSpaceApi2.default)({
	    http: spaceScopedHttpClient
	  });
	  var enhancedSpace = (0, _enhanceWithMethods2.default)(space, spaceApi);
	  return (0, _freezeSys2.default)(enhancedSpace);
	}

	/**
	 * This method wraps each space in a collection with the space API. See wrapSpace
	 * above for more details.
	 * @private
	 * @param  {Object} http - HTTP client instance
	 * @param  {Object} data - API response for a Space collection
	 * @return {SpaceCollection}
	 */
	function wrapSpaceCollection(http, data) {
	  var spaces = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  spaces.items = spaces.items.map(function (entity) {
	    return wrapSpace(http, entity);
	  });
	  return (0, _freezeSys2.default)(spaces);
	}

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _freeze = __webpack_require__(266);

	var _freeze2 = _interopRequireDefault(_freeze);

	exports.default = freezeSys;

	var _each = __webpack_require__(270);

	var _each2 = _interopRequireDefault(_each);

	var _isPlainObject = __webpack_require__(272);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function freezeObjectDeep(obj) {
	  (0, _each2.default)(obj, function (value, key) {
	    if ((0, _isPlainObject2.default)(value)) {
	      freezeObjectDeep(value);
	    }
	  });
	  return (0, _freeze2.default)(obj);
	}

	function freezeSys(obj) {
	  freezeObjectDeep(obj.sys);
	  return obj;
	}

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(267), __esModule: true };

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(268);
	module.exports = __webpack_require__(6).Object.freeze;

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(23)
	  , meta     = __webpack_require__(81).onFreeze;

	__webpack_require__(269)('freeze', function($freeze){
	  return function freeze(it){
	    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
	  };
	});

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(16)
	  , core    = __webpack_require__(6)
	  , fails   = __webpack_require__(26);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(271);


/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(170),
	    baseEach = __webpack_require__(219),
	    baseIteratee = __webpack_require__(224),
	    isArray = __webpack_require__(124);

	/**
	 * Iterates over elements of `collection` and invokes `iteratee` for each element.
	 * The iteratee is invoked with three arguments: (value, index|key, collection).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * **Note:** As with other "Collections" methods, objects with a "length"
	 * property are iterated like arrays. To avoid this behavior use `_.forIn`
	 * or `_.forOwn` for object iteration.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @alias each
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 * @see _.forEachRight
	 * @example
	 *
	 * _([1, 2]).forEach(function(value) {
	 *   console.log(value);
	 * });
	 * // => Logs `1` then `2`.
	 *
	 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forEach(collection, iteratee) {
	  var func = isArray(collection) ? arrayEach : baseEach;
	  return func(collection, baseIteratee(iteratee, 3));
	}

	module.exports = forEach;


/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	var getPrototype = __webpack_require__(130),
	    isHostObject = __webpack_require__(154),
	    isObjectLike = __webpack_require__(113);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object,
	 *  else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) ||
	      objectToString.call(value) != objectTag || isHostObject(value)) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return (typeof Ctor == 'function' &&
	    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	}

	module.exports = isPlainObject;


/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = mixinToPlainObject;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Mixes in a method to return just a plain object with no additional methods
	 * @private
	 * @param {Object} data - Any plain JSON response returned from the API
	 * @return {Object} Enhanced object with toPlainObject method
	 */
	function mixinToPlainObject(data) {
	  return Object.defineProperty(data, 'toPlainObject', {
	    enumerable: false,
	    configurable: false,
	    writable: false,
	    value: function value() {
	      return (0, _cloneDeep2.default)(this);
	    }
	  });
	}

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _defineProperty = __webpack_require__(275);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	exports.default = enhanceWithMethods;

	var _reduce = __webpack_require__(218);

	var _reduce2 = _interopRequireDefault(_reduce);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * This method enhances a base object which would normally contain data, with
	 * methods from another object that might work on manipulating that data.
	 * All the added methods are set as non enumerable, non configurable, and non
	 * writable properties. This ensures that if we try to clone or stringify the
	 * base object, we don't have to worry about these additional methods.
	 * @private
	 * @param {object} baseObject - Base object with data
	 * @param {object} methodsObject - Object with methods as properties. The key
	 * values used here will be the same that will be defined on the baseObject.
	 */
	function enhanceWithMethods(baseObject, methodsObject) {
	  return (0, _reduce2.default)(methodsObject, function (baseObject, method, methodName) {
	    (0, _defineProperty2.default)(baseObject, methodName, {
	      enumerable: false,
	      configurable: false,
	      writable: false,
	      value: method
	    });
	    return baseObject;
	  }, baseObject);
	}

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(276), __esModule: true };

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(277);
	var $Object = __webpack_require__(6).Object;
	module.exports = function defineProperty(it, key, desc){
	  return $Object.defineProperty(it, key, desc);
	};

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(16);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(25), 'Object', {defineProperty: __webpack_require__(21).f});

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createSpaceApi;

	var _createRequestConfig = __webpack_require__(279);

	var _createRequestConfig2 = _interopRequireDefault(_createRequestConfig);

	var _errorHandler = __webpack_require__(262);

	var _errorHandler2 = _interopRequireDefault(_errorHandler);

	var _entities = __webpack_require__(263);

	var _entities2 = _interopRequireDefault(_entities);

	var _omit = __webpack_require__(280);

	var _omit2 = _interopRequireDefault(_omit);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @memberof ContentfulSpaceAPI
	 * @typedef {Object} ContentfulSpaceAPI
	 * @prop {function} delete
	 * @prop {function} update
	 * @prop {function} getContentType
	 * @prop {function} getContentTypes
	 * @prop {function} createContentType
	 * @prop {function} createContentTypeWithId
	 * @prop {function} getEntry
	 * @prop {function} getEntries
	 * @prop {function} createEntry
	 * @prop {function} createEntryWithId
	 * @prop {function} getAsset
	 * @prop {function} getAssets
	 * @prop {function} createAsset
	 * @prop {function} createAssetWithId
	 * @prop {function} getLocale
	 * @prop {function} getLocales
	 * @prop {function} createLocale
	 * @prop {function} getWebhook
	 * @prop {function} getWebhooks
	 * @prop {function} createWebhook
	 * @prop {function} createWebhookWithId
	 * @prop {function} getRole
	 * @prop {function} getRoles
	 * @prop {function} createRole
	 * @prop {function} createRoleWithId
	 * @prop {function} getSpaceMembership
	 * @prop {function} getSpaceMemberships
	 * @prop {function} createSpaceMembership
	 * @prop {function} createSpaceMembershipWithId
	 * @prop {function} getApiKey
	 * @prop {function} getApiKeys
	 * @prop {function} createApiKey
	 * @prop {function} createApiKeyWithId
	 */

	/**
	 * Creates API object with methods to access the Space API
	 * @private
	 * @param {Object} params - API initialization params
	 * @prop {Object} http - HTTP client instance
	 * @prop {Object} entities - Object with wrapper methods for each kind of entity
	 * @return {ContentfulSpaceAPI}
	 */
	/**
	 * Contentful Space API. Contains methods to access any operations at a space
	 * level, such as creating and reading entities contained in a space.
	 * @namespace ContentfulSpaceAPI
	 */

	function createSpaceApi(_ref) {
	  var http = _ref.http;
	  var wrapSpace = _entities2.default.space.wrapSpace;
	  var _entities$contentType = _entities2.default.contentType;
	  var wrapContentType = _entities$contentType.wrapContentType;
	  var wrapContentTypeCollection = _entities$contentType.wrapContentTypeCollection;
	  var _entities$entry = _entities2.default.entry;
	  var wrapEntry = _entities$entry.wrapEntry;
	  var wrapEntryCollection = _entities$entry.wrapEntryCollection;
	  var _entities$asset = _entities2.default.asset;
	  var wrapAsset = _entities$asset.wrapAsset;
	  var wrapAssetCollection = _entities$asset.wrapAssetCollection;
	  var _entities$locale = _entities2.default.locale;
	  var wrapLocale = _entities$locale.wrapLocale;
	  var wrapLocaleCollection = _entities$locale.wrapLocaleCollection;
	  var _entities$webhook = _entities2.default.webhook;
	  var wrapWebhook = _entities$webhook.wrapWebhook;
	  var wrapWebhookCollection = _entities$webhook.wrapWebhookCollection;
	  var _entities$role = _entities2.default.role;
	  var wrapRole = _entities$role.wrapRole;
	  var wrapRoleCollection = _entities$role.wrapRoleCollection;
	  var _entities$spaceMember = _entities2.default.spaceMembership;
	  var wrapSpaceMembership = _entities$spaceMember.wrapSpaceMembership;
	  var wrapSpaceMembershipCollection = _entities$spaceMember.wrapSpaceMembershipCollection;
	  var _entities$apiKey = _entities2.default.apiKey;
	  var wrapApiKey = _entities$apiKey.wrapApiKey;
	  var wrapApiKeyCollection = _entities$apiKey.wrapApiKeyCollection;
	  var wrapEditorInterface = _entities2.default.editorInterface.wrapEditorInterface;

	  /**
	   * Space instances.
	   * @namespace Space
	   */

	  /**
	   * Deletes the space
	   * @memberof Space
	   * @func delete
	   * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
	   * @example
	   * space.delete()
	   * .catch(err => console.log(err))
	   */

	  function deleteSpace() {
	    return http.delete('').then(function (response) {}, _errorHandler2.default);
	  }

	  /**
	   * Updates the space
	   * @memberof Space
	   * @func update
	   * @return {Promise<Space.Space>} Promise for the updated space.
	   * @example
	   * space.name = 'Updated Space Name'
	   * space.update()
	   * .then(space => console.log(space))
	   */
	  function updateSpace() {
	    var raw = this.toPlainObject();
	    var data = (0, _omit2.default)(raw, ['sys']);
	    return http.put('', data, {
	      headers: {
	        'X-Contentful-Version': raw.sys.version
	      }
	    }).then(function (response) {
	      return wrapSpace(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a Content Type
	   * @memberof ContentfulSpaceAPI
	   * @param  {string} id
	   * @return {Promise<ContentType.ContentType>} Promise for a Content Type
	   * @example
	   * space.getContentType('contentTypeId')
	   * .then(contentType => console.log(contentType))
	   */
	  function getContentType(id) {
	    return http.get('content_types/' + id).then(function (response) {
	      return wrapContentType(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets an EditorInterface for a ContentType
	   * @memberof ContentfulSpaceAPI
	   * @param  {string} contentTypeId
	   * @return {Promise<EditorInterface.EditorInterface>} Promise for an EditorInterface
	   * @example
	   * space.getEditorInterfaceForContentType('contentTypeId')
	   * .then(editorInterface => console.log(editorInterface))
	   */
	  function getEditorInterfaceForContentType(contentTypeId) {
	    return http.get('content_types/' + contentTypeId + '/editor_interface').then(function (response) {
	      return wrapEditorInterface(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a collection of Content Types
	   * @memberof ContentfulSpaceAPI
	   * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
	   * @return {Promise<ContentType.ContentTypeCollection>} Promise for a collection of Content Types
	   * @example
	   * space.getContentTypes()
	   * .then(contentTypes => console.log(contentTypes.items))
	   */
	  function getContentTypes() {
	    var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    return http.get('content_types', (0, _createRequestConfig2.default)({ query: query })).then(function (response) {
	      return wrapContentTypeCollection(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Content Type
	   * @memberof ContentfulSpaceAPI
	   * @see {ContentType.ContentType}
	   * @param {object} data - Object representation of the Content Type to be created
	   * @return {Promise<ContentType.ContentType>} Promise for the newly created Content Type
	   * @example
	   * space.createContentType({name: 'Post', fields: []})
	   * .then(ct => console.log(ct))
	   */
	  function createContentType(data) {
	    return http.post('content_types', data).then(function (response) {
	      return wrapContentType(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Content Type with a specific id
	   * @memberof ContentfulSpaceAPI
	   * @see {ContentType.ContentType}
	   * @param {string} id - Content Type ID
	   * @param {object} data - Object representation of the Content Type to be created
	   * @return {Promise<ContentType.ContentType>} Promise for the newly created Content Type
	   * @example
	   * space.createContentType('post', {name: 'Post', fields: []})
	   * .then(ct => console.log(ct))
	   */
	  function createContentTypeWithId(id, data) {
	    return http.put('content_types/' + id, data).then(function (response) {
	      return wrapContentType(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets an Entry
	   * @memberof ContentfulSpaceAPI
	   * @param  {string} id
	   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.
	   * @return {Promise<Entry.Entry>} Promise for an Entry
	   * @example
	   * space.getEntry('entryId')
	   * .then(entry => console.log(entry))
	   */
	  function getEntry(id) {
	    var query = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    return http.get('entries/' + id, (0, _createRequestConfig2.default)({ query: query })).then(function (response) {
	      return wrapEntry(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a collection of Entries
	   * @memberof ContentfulSpaceAPI
	   * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
	   * @return {Promise<Entry.EntryCollection>} Promise for a collection of Entries
	   * @example
	   * space.getEntries({content_type: 'contentTypeId'})
	   * .then(entries => console.log(entries.items))
	   */
	  function getEntries() {
	    var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    return http.get('entries', (0, _createRequestConfig2.default)({ query: query })).then(function (response) {
	      return wrapEntryCollection(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Entry
	   * @memberof ContentfulSpaceAPI
	   * @see {Entry.Entry}
	   * @param {string} contentTypeId - The Content Type which this Entry is based on
	   * @param {object} data - Object representation of the Entry to be created
	   * @return {Promise<Entry.Entry>} Promise for the newly created Entry
	   * @example
	   * space.createEntry('contentTypeId', {
	   *   fields: {
	   *     title: {
	   *       'en-US': 'english content',
	   *       'de-DE': 'german content'
	   *     }
	   *   }
	   * })
	   * .then(e => console.log(e))
	   */
	  function createEntry(contentTypeId, data) {
	    return http.post('entries', data, {
	      headers: {
	        'X-Contentful-Content-Type': contentTypeId
	      }
	    }).then(function (response) {
	      return wrapEntry(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Entry with a specific id
	   * @memberof ContentfulSpaceAPI
	   * @see {Entry.Entry}
	   * @param {string} contentTypeId - The Content Type which this Entry is based on
	   * @param {string} id - Entry ID
	   * @param {object} data - Object representation of the Entry to be created
	   * @return {Promise<Entry.Entry>} Promise for the newly created Entry
	   * @example
	   * space.createEntryWithId('contentTypeId', 'entryId', {
	   *   fields: {
	   *     title: {
	   *       'en-US': 'english content',
	   *       'de-DE': 'german content'
	   *     }
	   *   }
	   * })
	   * .then(e => console.log(e))
	   */
	  function createEntryWithId(contentTypeId, id, data) {
	    return http.put('entries/' + id, data, {
	      headers: {
	        'X-Contentful-Content-Type': contentTypeId
	      }
	    }).then(function (response) {
	      return wrapEntry(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets an Asset
	   * @memberof ContentfulSpaceAPI
	   * @param  {string} id
	   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.
	   * @return {Promise<Asset.Asset>} Promise for an Asset
	   * @example
	   * space.getAsset('assetId')
	   * .then(asset => console.log(asset))
	   */
	  function getAsset(id) {
	    var query = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    return http.get('assets/' + id, (0, _createRequestConfig2.default)({ query: query })).then(function (response) {
	      return wrapAsset(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a collection of Assets
	   * @memberof ContentfulSpaceAPI
	   * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
	   * @return {Promise<Asset.AssetCollection>} Promise for a collection of Assets
	   * @example
	   * space.getAssets()
	   * .then(assets => console.log(assets.items))
	   */
	  function getAssets() {
	    var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    return http.get('assets', (0, _createRequestConfig2.default)({ query: query })).then(function (response) {
	      return wrapAssetCollection(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Asset. After creation, call asset.processForLocale or asset.processForAllLocales to start asset processing.
	   * @memberof ContentfulSpaceAPI
	   * @see {Asset.Asset}
	   * @param {object} data - Object representation of the Asset to be created. Note that the field object should have an upload property on asset creation, which will be removed and replaced with an url property when processing is finished.
	   * @return {Promise<Asset.Asset>} Promise for the newly created Asset
	   * @example
	   * space.createAsset({fields: {
	   *   fields: {
	   *     file: {
	   *       'en-US': {
	   *          contentType: 'image/jpeg',
	   *          fileName: 'filename_english.jpg',
	   *          upload: 'http://example.com/filename_original_en.jpg'
	   *       },
	   *       'de-DE': {
	   *          contentType: 'image/jpeg',
	   *          fileName: 'filename_german.jpg',
	   *          upload: 'http://example.com/filename_original_de.jpg'
	   *       }
	   *     }
	   *   }
	   * })
	   * .then(e => console.log(e))
	   */
	  function createAsset(data) {
	    return http.post('assets', data).then(function (response) {
	      return wrapAsset(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Asset with a specific id. After creation, call asset.processForLocale or asset.processForAllLocales to start asset processing.
	   * @memberof ContentfulSpaceAPI
	   * @see {Asset.Asset}
	   * @param {string} id - Asset ID
	   * @param {object} data - Object representation of the Asset to be created. Note that the field object should have an upload property on asset creation, which will be removed and replaced with an url property when processing is finished.
	   * @return {Promise<Asset.Asset>} Promise for the newly created Asset
	   * @example
	   * space.createAssetWithId('image', {
	   *   fields: {
	   *     file: {
	   *       'en-US': {
	   *          contentType: 'image/jpeg',
	   *          fileName: 'filename_english.jpg',
	   *          upload: 'http://example.com/filename_original_en.jpg'
	   *       },
	   *       'de-DE': {
	   *          contentType: 'image/jpeg',
	   *          fileName: 'filename_german.jpg',
	   *          upload: 'http://example.com/filename_original_de.jpg'
	   *       }
	   *     }
	   *   }
	   * })
	   * .then(e => console.log(e))
	   */
	  function createAssetWithId(id, data) {
	    return http.put('assets/' + id, data).then(function (response) {
	      return wrapAsset(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a Locale
	   * @memberof ContentfulSpaceAPI
	   * @param  {string} id
	   * @return {Promise<Locale.Locale>} Promise for an Locale
	   * @example
	   * space.getLocale('localeId')
	   * .then(locale => console.log(locale))
	   */
	  function getLocale(id) {
	    return http.get('locales/' + id).then(function (response) {
	      return wrapLocale(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a collection of Locales
	   * @memberof ContentfulSpaceAPI
	   * @return {Promise<Locale.LocaleCollection>} Promise for a collection of Locales
	   * @example
	   * space.getLocales()
	   * .then(locales => console.log(locales.items))
	   */
	  function getLocales() {
	    return http.get('locales').then(function (response) {
	      return wrapLocaleCollection(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Locale
	   * @memberof ContentfulSpaceAPI
	   * @see {Locale.Locale}
	   * @param {object} data - Object representation of the Locale to be created
	   * @return {Promise<Locale.Locale>} Promise for the newly created Locale
	   * @example
	   * space.createLocale({name: 'German (Germany)', code: 'de-DE'})
	   * .then(e => console.log(e))
	   */
	  function createLocale(data) {
	    return http.post('locales', data).then(function (response) {
	      return wrapLocale(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a Webhook
	   * @memberof ContentfulSpaceAPI
	   * @param  {string} id
	   * @return {Promise<Webhook.Webhook>} Promise for a Webhook
	   * @example
	   * space.getWebhook('id')
	   * .then(webhook => console.log(webhook))
	   */
	  function getWebhook(id) {
	    return http.get('webhook_definitions/' + id).then(function (response) {
	      return wrapWebhook(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a collection of Webhooks
	   * @memberof ContentfulSpaceAPI
	   * @return {Promise<Webhook.WebhookCollection>} Promise for a collection of Webhooks
	   * @example
	   * space.getWebhooks()
	   * .then(webhooks => console.log(webhooks.items))
	   */
	  function getWebhooks() {
	    return http.get('webhook_definitions').then(function (response) {
	      return wrapWebhookCollection(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Webhook
	   * @memberof ContentfulSpaceAPI
	   * @see {Webhook.Webhook}
	   * @param {object} data - Object representation of the Webhook to be created
	   * @return {Promise<Webhook.Webhook>} Promise for the newly created Webhook
	   * @example
	   * space.createWebhook({})
	   * .then(webhook => console.log(webhook))
	   */
	  function createWebhook(data) {
	    return http.post('webhook_definitions', data).then(function (response) {
	      return wrapWebhook(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Webhook with a specific id
	   * @memberof ContentfulSpaceAPI
	   * @see {Webhook.Webhook}
	   * @param {string} id - Webhook ID
	   * @param {object} data - Object representation of the Webhook to be created
	   * @return {Promise<Webhook.Webhook>} Promise for the newly created Webhook
	   * @example
	   * space.createWebhook('id', {})
	   * .then(webhook => console.log(webhook))
	   */
	  function createWebhookWithId(id, data) {
	    return http.put('webhook_definitions/' + id, data).then(function (response) {
	      return wrapWebhook(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a Space Membership
	   * @memberof ContentfulSpaceAPI
	   * @param  {string} id
	   * @return {Promise<SpaceMembership.SpaceMembership>} Promise for a Space Membership
	   * @example
	   * space.getSpaceMembership('id')
	   * .then(spaceMembership => console.log(spaceMembership))
	   */
	  function getSpaceMembership(id) {
	    return http.get('space_memberships/' + id).then(function (response) {
	      return wrapSpaceMembership(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a collection of Space Memberships
	   * @memberof ContentfulSpaceAPI
	   * @return {Promise<SpaceMembership.SpaceMembershipCollection>} Promise for a collection of Space Memberships
	   * @example
	   * space.getSpaceMemberships()
	   * .then(spaceMemberships => console.log(spaceMemberships.items))
	   */
	  function getSpaceMemberships() {
	    return http.get('space_memberships').then(function (response) {
	      return wrapSpaceMembershipCollection(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Space Membership
	   * @memberof ContentfulSpaceAPI
	   * @see {SpaceMembership.SpaceMembership}
	   * @param {object} data - Object representation of the Space Membership to be created
	   * @return {Promise<SpaceMembership.SpaceMembership>} Promise for the newly created Space Membership
	   * @example
	   * space.createSpaceMembership({})
	   * .then(spaceMembership => console.log(spaceMembership))
	   */
	  function createSpaceMembership(data) {
	    return http.post('space_memberships', data).then(function (response) {
	      return wrapSpaceMembership(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Space Membership with a specific id
	   * @memberof ContentfulSpaceAPI
	   * @see {SpaceMembership.SpaceMembership}
	   * @param {string} id - Space Membership ID
	   * @param {object} data - Object representation of the Space Membership to be created
	   * @return {Promise<SpaceMembership.SpaceMembership>} Promise for the newly created Space Membership
	   * @example
	   * space.createSpaceMembership('id', {})
	   * .then(spaceMembership => console.log(spaceMembership))
	   */
	  function createSpaceMembershipWithId(id, data) {
	    return http.put('space_memberships/' + id, data).then(function (response) {
	      return wrapSpaceMembership(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a Role
	   * @memberof ContentfulSpaceAPI
	   * @param  {string} id
	   * @return {Promise<Role.Role>} Promise for a Role
	   * @example
	   * space.getRole('id')
	   * .then(role => console.log(role))
	   */
	  function getRole(id) {
	    return http.get('roles/' + id).then(function (response) {
	      return wrapRole(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a collection of Roles
	   * @memberof ContentfulSpaceAPI
	   * @return {Promise<Role.RoleCollection>} Promise for a collection of Roles
	   * @example
	   * space.getRoles()
	   * .then(roles => console.log(roles.items))
	   */
	  function getRoles() {
	    return http.get('roles').then(function (response) {
	      return wrapRoleCollection(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Role
	   * @memberof ContentfulSpaceAPI
	   * @see {Role.Role}
	   * @param {object} data - Object representation of the Role to be created
	   * @return {Promise<Role.Role>} Promise for the newly created Role
	   * @example
	   * space.createRole({})
	   * .then(role => console.log(role))
	   */
	  function createRole(data) {
	    return http.post('roles', data).then(function (response) {
	      return wrapRole(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Role with a specific id
	   * @memberof ContentfulSpaceAPI
	   * @see {Role.Role}
	   * @param {string} id - Role ID
	   * @param {object} data - Object representation of the Role to be created
	   * @return {Promise<Role.Role>} Promise for the newly created Role
	   * @example
	   * space.createRole('id', {})
	   * .then(role => console.log(role))
	   */
	  function createRoleWithId(id, data) {
	    return http.put('roles/' + id, data).then(function (response) {
	      return wrapRole(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a Api Key
	   * @memberof ContentfulSpaceAPI
	   * @param  {string} id
	   * @return {Promise<ApiKey.ApiKey>} Promise for a Api Key
	   * @example
	   * space.getApiKey('id')
	   * .then(apiKey => console.log(apiKey))
	   */
	  function getApiKey(id) {
	    return http.get('api_keys/' + id).then(function (response) {
	      return wrapApiKey(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Gets a collection of Api Keys
	   * @memberof ContentfulSpaceAPI
	   * @return {Promise<ApiKey.ApiKeyCollection>} Promise for a collection of Api Keys
	   * @example
	   * space.getApiKeys()
	   * .then(apiKeys => console.log(apiKeys.items))
	   */
	  function getApiKeys() {
	    return http.get('api_keys').then(function (response) {
	      return wrapApiKeyCollection(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Api Key
	   * @memberof ContentfulSpaceAPI
	   * @see {ApiKey.ApiKey}
	   * @param {object} data - Object representation of the Api Key to be created
	   * @return {Promise<ApiKey.ApiKey>} Promise for the newly created Api Key
	   * @example
	   * space.createApiKey({})
	   * .then(apiKey => console.log(apiKey))
	   */
	  function createApiKey(data) {
	    return http.post('api_keys', data).then(function (response) {
	      return wrapApiKey(http, response.data);
	    }, _errorHandler2.default);
	  }

	  /**
	   * Creates a Api Key with a specific id
	   * @memberof ContentfulSpaceAPI
	   * @see {ApiKey.ApiKey}
	   * @param {string} id - Api Key ID
	   * @param {object} data - Object representation of the Api Key to be created
	   * @return {Promise<ApiKey.ApiKey>} Promise for the newly created Api Key
	   * @example
	   * space.createApiKey('id', {})
	   * .then(apiKey => console.log(apiKey))
	   */
	  function createApiKeyWithId(id, data) {
	    return http.put('api_keys/' + id, data).then(function (response) {
	      return wrapApiKey(http, response.data);
	    }, _errorHandler2.default);
	  }

	  return {
	    delete: deleteSpace,
	    update: updateSpace,
	    getContentType: getContentType,
	    getContentTypes: getContentTypes,
	    createContentType: createContentType,
	    createContentTypeWithId: createContentTypeWithId,
	    getEditorInterfaceForContentType: getEditorInterfaceForContentType,
	    getEntry: getEntry,
	    getEntries: getEntries,
	    createEntry: createEntry,
	    createEntryWithId: createEntryWithId,
	    getAsset: getAsset,
	    getAssets: getAssets,
	    createAsset: createAsset,
	    createAssetWithId: createAssetWithId,
	    getLocale: getLocale,
	    getLocales: getLocales,
	    createLocale: createLocale,
	    getWebhook: getWebhook,
	    getWebhooks: getWebhooks,
	    createWebhook: createWebhook,
	    createWebhookWithId: createWebhookWithId,
	    getRole: getRole,
	    getRoles: getRoles,
	    createRole: createRole,
	    createRoleWithId: createRoleWithId,
	    getSpaceMembership: getSpaceMembership,
	    getSpaceMemberships: getSpaceMemberships,
	    createSpaceMembership: createSpaceMembership,
	    createSpaceMembershipWithId: createSpaceMembershipWithId,
	    getApiKey: getApiKey,
	    getApiKeys: getApiKeys,
	    createApiKey: createApiKey,
	    createApiKeyWithId: createApiKeyWithId
	  };
	}

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createRequestConfig;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Creates request parameters configuration by parsing an existing query object
	 * @private
	 * @param {Object} query
	 * @return {Object} Config object with `params` property, ready to be used in axios
	 */
	function createRequestConfig(_ref) {
	  var query = _ref.query;

	  var config = {};
	  delete query.resolveLinks;
	  config.params = (0, _cloneDeep2.default)(query);
	  return config;
	}

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(281),
	    baseDifference = __webpack_require__(282),
	    baseFlatten = __webpack_require__(289),
	    basePick = __webpack_require__(291),
	    getAllKeysIn = __webpack_require__(292),
	    rest = __webpack_require__(108),
	    toKey = __webpack_require__(249);

	/**
	 * The opposite of `_.pick`; this method creates an object composed of the
	 * own and inherited enumerable string keyed properties of `object` that are
	 * not omitted.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [props] The property identifiers to omit.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.omit(object, ['a', 'c']);
	 * // => { 'b': '2' }
	 */
	var omit = rest(function(object, props) {
	  if (object == null) {
	    return {};
	  }
	  props = arrayMap(baseFlatten(props, 1), toKey);
	  return basePick(object, baseDifference(getAllKeysIn(object), props));
	});

	module.exports = omit;


/***/ },
/* 281 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array ? array.length : 0,
	      result = Array(length);

	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}

	module.exports = arrayMap;


/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(230),
	    arrayIncludes = __webpack_require__(283),
	    arrayIncludesWith = __webpack_require__(286),
	    arrayMap = __webpack_require__(281),
	    baseUnary = __webpack_require__(287),
	    cacheHas = __webpack_require__(288);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * The base implementation of methods like `_.difference` without support
	 * for excluding multiple arrays or iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      isCommon = true,
	      length = array.length,
	      result = [],
	      valuesLength = values.length;

	  if (!length) {
	    return result;
	  }
	  if (iteratee) {
	    values = arrayMap(values, baseUnary(iteratee));
	  }
	  if (comparator) {
	    includes = arrayIncludesWith;
	    isCommon = false;
	  }
	  else if (values.length >= LARGE_ARRAY_SIZE) {
	    includes = cacheHas;
	    isCommon = false;
	    values = new SetCache(values);
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;

	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === computed) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (!includes(values, computed, comparator)) {
	      result.push(value);
	    }
	  }
	  return result;
	}

	module.exports = baseDifference;


/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(284);

	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to search.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array ? array.length : 0;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}

	module.exports = arrayIncludes;


/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	var indexOfNaN = __webpack_require__(285);

	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  if (value !== value) {
	    return indexOfNaN(array, fromIndex);
	  }
	  var index = fromIndex - 1,
	      length = array.length;

	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}

	module.exports = baseIndexOf;


/***/ },
/* 285 */
/***/ function(module, exports) {

	/**
	 * Gets the index at which the first occurrence of `NaN` is found in `array`.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched `NaN`, else `-1`.
	 */
	function indexOfNaN(array, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 1 : -1);

	  while ((fromRight ? index-- : ++index < length)) {
	    var other = array[index];
	    if (other !== other) {
	      return index;
	    }
	  }
	  return -1;
	}

	module.exports = indexOfNaN;


/***/ },
/* 286 */
/***/ function(module, exports) {

	/**
	 * This function is like `arrayIncludes` except that it accepts a comparator.
	 *
	 * @private
	 * @param {Array} [array] The array to search.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array ? array.length : 0;

	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}

	module.exports = arrayIncludesWith;


/***/ },
/* 287 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing wrapper metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}

	module.exports = baseUnary;


/***/ },
/* 288 */
/***/ function(module, exports) {

	/**
	 * Checks if a cache value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}

	module.exports = cacheHas;


/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(179),
	    isFlattenable = __webpack_require__(290);

	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;

	  predicate || (predicate = isFlattenable);
	  result || (result = []);

	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}

	module.exports = baseFlatten;


/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	var isArguments = __webpack_require__(122),
	    isArray = __webpack_require__(124);

	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value);
	}

	module.exports = isFlattenable;


/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(192);

	/**
	 * The base implementation of `_.pick` without support for individual
	 * property identifiers.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} props The property identifiers to pick.
	 * @returns {Object} Returns the new object.
	 */
	function basePick(object, props) {
	  object = Object(object);
	  return arrayReduce(props, function(result, key) {
	    if (key in object) {
	      result[key] = object[key];
	    }
	    return result;
	  }, {});
	}

	module.exports = basePick;


/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(178),
	    getSymbolsIn = __webpack_require__(293),
	    keysIn = __webpack_require__(114);

	/**
	 * Creates an array of own and inherited enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeysIn(object) {
	  return baseGetAllKeys(object, keysIn, getSymbolsIn);
	}

	module.exports = getAllKeysIn;


/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(179),
	    getPrototype = __webpack_require__(130),
	    getSymbols = __webpack_require__(175);

	/** Built-in value references. */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;

	/**
	 * Creates an array of the own and inherited enumerable symbol properties
	 * of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {
	  var result = [];
	  while (object) {
	    arrayPush(result, getSymbols(object));
	    object = getPrototype(object);
	  }
	  return result;
	};

	module.exports = getSymbolsIn;


/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.wrapEntry = wrapEntry;
	exports.wrapEntryCollection = wrapEntryCollection;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _freezeSys = __webpack_require__(265);

	var _freezeSys2 = _interopRequireDefault(_freezeSys);

	var _enhanceWithMethods = __webpack_require__(274);

	var _enhanceWithMethods2 = _interopRequireDefault(_enhanceWithMethods);

	var _toPlainObject = __webpack_require__(273);

	var _toPlainObject2 = _interopRequireDefault(_toPlainObject);

	var _instanceActions = __webpack_require__(295);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Types of fields found in an Entry
	 * @namespace EntryFields
	 */

	/**
	 * @memberof EntryFields
	 * @typedef Symbol
	 * @type string
	 */

	/**
	 * @memberof EntryFields
	 * @typedef Text
	 * @type string
	 */

	/**
	 * @memberof EntryFields
	 * @typedef Integer
	 * @type number
	 */

	/**
	 * @memberof EntryFields
	 * @typedef Number
	 * @type number
	 */

	/**
	 * @memberof EntryFields
	 * @typedef Date
	 * @type string
	 */

	/**
	 * @memberof EntryFields
	 * @typedef Boolean
	 * @type boolean
	 */

	/**
	 * @memberof EntryFields
	 * @typedef Location
	 * @prop {string} lat - latitude
	 * @prop {string} lon - longitude
	 */

	/**
	 * A Field in an Entry can have one of the following types that can be defined in Contentful. See <a href="https://www.contentful.com/developers/docs/references/field-type/">Field Types</a> for more details.
	 * @memberof EntryFields
	 * @typedef Field
	 * @type EntryFields.Symbol | EntryFields.Text | EntryFields.Integer | EntryFields.Number | EntryFields.Date | EntryFields.Boolean | EntryFields.Location | Meta.Link | Array<EntryFields.Symbol|Meta.Link> | Object
	 */

	/**
	 * @memberof Entry
	 * @typedef Entry
	 * @prop {Meta.Sys} sys - Standard system metadata with additional entry specific properties
	 * @prop {Meta.Link} sys.contentType - Content Type used by this Entry
	 * @prop {string=} sys.locale - If present, indicates the locale which this entry uses
	 * @prop {Object<EntryFields.Field>} fields - Object with content for each field
	 * @prop {function(): Object} toPlainObject() - Returns this Entry as a plain JS object
	 */

	function createEntryApi(http) {
	  return {

	    /**
	     * Sends an update to the server with any changes made to the object's properties
	     * @memberof Entry
	     * @func update
	     * @return {Promise<Entry>} Object returned from the server with updated changes.
	     * @example
	     * entry.fields.name['en-US'] = 'Blog Post'
	     * entry.update()
	     * .then(entry => console.log(entry.fields.name['en-US']))
	     */
	    update: (0, _instanceActions.createUpdateEntity)({
	      http: http,
	      entityPath: 'entries',
	      wrapperMethod: wrapEntry
	    }),

	    /**
	     * Deletes this object on the server.
	     * @memberof Entry
	     * @func delete
	     * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
	     * @example
	     * entry.delete()
	     * .catch(err => console.log(err))
	     */
	    delete: (0, _instanceActions.createDeleteEntity)({
	      http: http,
	      entityPath: 'entries'
	    }),

	    /**
	     * Publishes the object
	     * @memberof Entry
	     * @func publish
	     * @return {Promise<Entry>} Object returned from the server with updated metadata.
	     * @example
	     * entry.publish()
	     * .then(entry => console.log(entry.sys.publishedVersion))
	     */
	    publish: (0, _instanceActions.createPublishEntity)({
	      http: http,
	      entityPath: 'entries',
	      wrapperMethod: wrapEntry
	    }),

	    /**
	     * Unpublishes the object
	     * @memberof Entry
	     * @func unpublish
	     * @return {Promise<Entry>} Object returned from the server with updated metadata.
	     * @example
	     * entry.unpublish()
	     * .then(entry => console.log(entry.sys))
	     */
	    unpublish: (0, _instanceActions.createUnpublishEntity)({
	      http: http,
	      entityPath: 'entries',
	      wrapperMethod: wrapEntry
	    }),

	    /**
	     * Archives the object
	     * @memberof Entry
	     * @func archive
	     * @return {Promise<Entry>} Object returned from the server with updated metadata.
	     * @example
	     * entry.archive()
	     * .then(entry => console.log(entry.sys.archivedVersion))
	     */
	    archive: (0, _instanceActions.createArchiveEntity)({
	      http: http,
	      entityPath: 'entries',
	      wrapperMethod: wrapEntry
	    }),

	    /**
	     * Unarchives the object
	     * @memberof Entry
	     * @func unarchive
	     * @return {Promise<Entry>} Object returned from the server with updated metadata.
	     * @example
	     * entry.unarchive()
	     * .then(entry => console.log(entry.sys))
	     */
	    unarchive: (0, _instanceActions.createUnarchiveEntity)({
	      http: http,
	      entityPath: 'entries',
	      wrapperMethod: wrapEntry
	    }),

	    /**
	     * Checks if the entry is published. A published entry might have unpublished changes (@see {Entry.isUpdated})
	     * @memberof Entry
	     * @func isPublished
	     * @return {boolean}
	     */
	    isPublished: (0, _instanceActions.createPublishedChecker)(),

	    /**
	     * Checks if the entry is updated. This means the entry was previously published but has unpublished changes.
	     * @memberof Entry
	     * @func isUpdated
	     * @return {boolean}
	     */
	    isUpdated: (0, _instanceActions.createUpdatedChecker)(),

	    /**
	     * Checks if the entry is in draft mode. This means it is not published.
	     * @memberof Entry
	     * @func isDraft
	     * @return {boolean}
	     */
	    isDraft: (0, _instanceActions.createDraftChecker)(),

	    /**
	     * Checks if entry is archived. This means it's not exposed to the Delivery/Preview APIs.
	     * @memberof Entry
	     * @func isArchived
	     * @return {boolean}
	     */
	    isArchived: (0, _instanceActions.createArchivedChecker)()
	  };
	}

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw entry data
	 * @return {Entry} Wrapped entry data
	 */
	/**
	 * Entry instances
	 * @namespace Entry
	 */
	function wrapEntry(http, data) {
	  var entry = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  (0, _enhanceWithMethods2.default)(entry, createEntryApi(http));
	  return (0, _freezeSys2.default)(entry);
	}

	/**
	 * @memberof Entry
	 * @typedef EntryCollection
	 * @prop {number} total
	 * @prop {number} skip
	 * @prop {number} limit
	 * @prop {Array<Entry.Entry>} items
	 * @prop {Array<Object>=} errors - Array of errors that might occur when retrieving entries.
	 * @prop {function(): Object} toPlainObject() - Returns this Entry collection as a plain JS object
	 */

	/**
	 * Data is also mixed in with link getters if links exist and includes were requested
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw entry collection data
	 * @return {EntryCollection} Wrapped entry collection data
	 */
	function wrapEntryCollection(http, data, resolveLinks) {
	  var entries = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  entries.items = entries.items.map(function (entity) {
	    return wrapEntry(http, entity);
	  });
	  return (0, _freezeSys2.default)(entries);
	}

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createUpdateEntity = createUpdateEntity;
	exports.createDeleteEntity = createDeleteEntity;
	exports.createPublishEntity = createPublishEntity;
	exports.createUnpublishEntity = createUnpublishEntity;
	exports.createArchiveEntity = createArchiveEntity;
	exports.createUnarchiveEntity = createUnarchiveEntity;
	exports.createPublishedChecker = createPublishedChecker;
	exports.createUpdatedChecker = createUpdatedChecker;
	exports.createDraftChecker = createDraftChecker;
	exports.createArchivedChecker = createArchivedChecker;

	var _omit = __webpack_require__(280);

	var _omit2 = _interopRequireDefault(_omit);

	var _errorHandler = __webpack_require__(262);

	var _errorHandler2 = _interopRequireDefault(_errorHandler);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createUpdateEntity(_ref) {
	  var http = _ref.http;
	  var entityPath = _ref.entityPath;
	  var wrapperMethod = _ref.wrapperMethod;

	  return function () {
	    var raw = this.toPlainObject();
	    var data = (0, _omit2.default)(raw, ['sys']);
	    return http.put(entityPath + '/' + this.sys.id, data, {
	      headers: {
	        'X-Contentful-Version': this.sys.version
	      }
	    }).then(function (response) {
	      return wrapperMethod(http, response.data);
	    }, _errorHandler2.default);
	  };
	}

	function createDeleteEntity(_ref2) {
	  var http = _ref2.http;
	  var entityPath = _ref2.entityPath;

	  return function () {
	    return http.delete(entityPath + '/' + this.sys.id).then(function (response) {}, _errorHandler2.default);
	  };
	}

	function createPublishEntity(_ref3) {
	  var http = _ref3.http;
	  var entityPath = _ref3.entityPath;
	  var wrapperMethod = _ref3.wrapperMethod;

	  return function () {
	    return http.put(entityPath + '/' + this.sys.id + '/published', null, {
	      headers: {
	        'X-Contentful-Version': this.sys.version
	      }
	    }).then(function (response) {
	      return wrapperMethod(http, response.data);
	    }, _errorHandler2.default);
	  };
	}

	function createUnpublishEntity(_ref4) {
	  var http = _ref4.http;
	  var entityPath = _ref4.entityPath;
	  var wrapperMethod = _ref4.wrapperMethod;

	  return function () {
	    return http.delete(entityPath + '/' + this.sys.id + '/published').then(function (response) {
	      return wrapperMethod(http, response.data);
	    }, _errorHandler2.default);
	  };
	}

	function createArchiveEntity(_ref5) {
	  var http = _ref5.http;
	  var entityPath = _ref5.entityPath;
	  var wrapperMethod = _ref5.wrapperMethod;

	  return function () {
	    return http.put(entityPath + '/' + this.sys.id + '/archived').then(function (response) {
	      return wrapperMethod(http, response.data);
	    }, _errorHandler2.default);
	  };
	}

	function createUnarchiveEntity(_ref6) {
	  var http = _ref6.http;
	  var entityPath = _ref6.entityPath;
	  var wrapperMethod = _ref6.wrapperMethod;

	  return function () {
	    return http.delete(entityPath + '/' + this.sys.id + '/archived').then(function (response) {
	      return wrapperMethod(http, response.data);
	    }, _errorHandler2.default);
	  };
	}

	function createPublishedChecker() {
	  return function () {
	    return !!this.sys.publishedVersion;
	  };
	}

	function createUpdatedChecker() {
	  return function () {
	    // The act of publishing an entity increases its version by 1, so any entry which has
	    // 2 versions higher or more than the publishedVersion has unpublished changes.
	    return this.sys.publishedVersion && this.sys.version > this.sys.publishedVersion + 1;
	  };
	}

	function createDraftChecker() {
	  return function () {
	    return !this.sys.publishedVersion;
	  };
	}

	function createArchivedChecker() {
	  return function () {
	    return !!this.sys.archivedVersion;
	  };
	}

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _keys = __webpack_require__(297);

	var _keys2 = _interopRequireDefault(_keys);

	var _promise = __webpack_require__(7);

	var _promise2 = _interopRequireDefault(_promise);

	exports.wrapAsset = wrapAsset;
	exports.wrapAssetCollection = wrapAssetCollection;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _freezeSys = __webpack_require__(265);

	var _freezeSys2 = _interopRequireDefault(_freezeSys);

	var _enhanceWithMethods = __webpack_require__(274);

	var _enhanceWithMethods2 = _interopRequireDefault(_enhanceWithMethods);

	var _toPlainObject = __webpack_require__(273);

	var _toPlainObject2 = _interopRequireDefault(_toPlainObject);

	var _errorHandler = __webpack_require__(262);

	var _errorHandler2 = _interopRequireDefault(_errorHandler);

	var _instanceActions = __webpack_require__(295);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Asset instances
	 * @namespace Asset
	 */


	var ASSET_PROCESSING_CHECK_WAIT = 500;
	var ASSET_PROCESSING_CHECK_RETRIES = 5;

	/**
	 * @memberof Asset
	 * @typedef Asset
	 * @prop {Meta.Sys} sys - Standard system metadata with additional asset specific properties
	 * @prop {string=} sys.locale - If present, indicates the locale which this asset uses
	 * @prop {Object} fields - Object with content for each field
	 * @prop {string} fields.title - Title for this asset
	 * @prop {string} fields.description - Description for this asset
	 * @prop {Object} fields.file - File object for this asset
	 * @prop {Object} fields.file.fileName - Name for the file
	 * @prop {string} fields.file.contentType - Mime type for the file
	 * @prop {string=} fields.file.upload - Url where the file is available to be downloaded from, into the Contentful asset system. After the asset is processed this field is gone.
	 * @prop {string=} fields.file.url - Url where the file is available at the Contentful media asset system. This field won't be available until the asset is processed.
	 * @prop {Object} fields.file.details - Details for the file, depending on file type (example: image size in bytes, etc)
	 * @prop {function(): Object} toPlainObject() - Returns this Asset as a plain JS object
	 */

	function createAssetApi(http) {
	  function checkIfAssetHasUrl(_ref) {
	    var resolve = _ref.resolve;
	    var reject = _ref.reject;
	    var id = _ref.id;
	    var locale = _ref.locale;
	    var _ref$processingCheckW = _ref.processingCheckWait;
	    var processingCheckWait = _ref$processingCheckW === undefined ? ASSET_PROCESSING_CHECK_WAIT : _ref$processingCheckW;
	    var _ref$processingCheckR = _ref.processingCheckRetries;
	    var processingCheckRetries = _ref$processingCheckR === undefined ? ASSET_PROCESSING_CHECK_RETRIES : _ref$processingCheckR;
	    var _ref$checkCount = _ref.checkCount;
	    var checkCount = _ref$checkCount === undefined ? 0 : _ref$checkCount;

	    http.get('assets/' + id).then(function (response) {
	      return wrapAsset(http, response.data);
	    }, _errorHandler2.default).then(function (asset) {
	      if (asset.fields.file[locale].url) {
	        resolve(asset);
	      } else if (checkCount === processingCheckRetries) {
	        var error = new Error();
	        error.name = 'AssetProcessingTimeout';
	        error.message = 'Asset is taking longer then expected to process.';
	        reject(error);
	      } else {
	        checkCount++;
	        setTimeout(function () {
	          return checkIfAssetHasUrl({
	            resolve: resolve,
	            reject: reject,
	            id: id,
	            locale: locale,
	            checkCount: checkCount
	          });
	        }, processingCheckWait);
	      }
	    });
	  }

	  function processForLocale(locale) {
	    var _ref2 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var processingCheckWait = _ref2.processingCheckWait;
	    var processingCheckRetries = _ref2.processingCheckRetries;

	    var assetId = this.sys.id;
	    return http.put('assets/' + this.sys.id + '/files/' + locale + '/process', null, {
	      headers: {
	        'X-Contentful-Version': this.sys.version
	      }
	    }).then(function () {
	      return new _promise2.default(function (resolve, reject) {
	        return checkIfAssetHasUrl({
	          resolve: resolve,
	          reject: reject,
	          id: assetId,
	          locale: locale,
	          processingCheckWait: processingCheckWait,
	          processingCheckRetries: processingCheckRetries
	        });
	      });
	    }, _errorHandler2.default);
	  }

	  function processForAllLocales() {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    var self = this;
	    var locales = (0, _keys2.default)(this.fields.file);
	    return _promise2.default.all(locales.map(function (locale) {
	      return processForLocale.call(self, locale, options);
	    })).then(function (assets) {
	      return assets[0];
	    });
	  }

	  return {
	    /**
	     * Sends an update to the server with any changes made to the object's properties
	     * @memberof Asset
	     * @func update
	     * @return {Promise<Asset>} Object returned from the server with updated changes.
	     * @example
	     * contentType.fields.name['en-US'] = 'Blog Post'
	     * asset.update()
	     * .then(asset => console.log(asset.fields.name['en-US']))
	     */
	    update: (0, _instanceActions.createUpdateEntity)({
	      http: http,
	      entityPath: 'assets',
	      wrapperMethod: wrapAsset
	    }),

	    /**
	     * Deletes this object on the server.
	     * @memberof Asset
	     * @func delete
	     * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
	     * @example
	     * asset.delete()
	     * .catch(err => console.log(err))
	     */
	    delete: (0, _instanceActions.createDeleteEntity)({
	      http: http,
	      entityPath: 'assets'
	    }),

	    /**
	     * Publishes the object
	     * @memberof Asset
	     * @func publish
	     * @return {Promise<Asset>} Object returned from the server with updated metadata.
	     * @example
	     * asset.publish()
	     * .then(asset => console.log(asset.sys.publishedVersion))
	     */
	    publish: (0, _instanceActions.createPublishEntity)({
	      http: http,
	      entityPath: 'assets',
	      wrapperMethod: wrapAsset
	    }),

	    /**
	     * Unpublishes the object
	     * @memberof Asset
	     * @func unpublish
	     * @return {Promise<Asset>} Object returned from the server with updated metadata.
	     * @example
	     * asset.unpublish()
	     * .then(asset => console.log(asset.sys))
	     */
	    unpublish: (0, _instanceActions.createUnpublishEntity)({
	      http: http,
	      entityPath: 'assets',
	      wrapperMethod: wrapAsset
	    }),

	    /**
	     * Archives the object
	     * @memberof Asset
	     * @func archive
	     * @return {Promise<Asset>} Object returned from the server with updated metadata.
	     * @example
	     * asset.archive()
	     * .then(asset => console.log(asset.sys.archivedVersion))
	     */
	    archive: (0, _instanceActions.createArchiveEntity)({
	      http: http,
	      entityPath: 'assets',
	      wrapperMethod: wrapAsset
	    }),

	    /**
	     * Unarchives the object
	     * @memberof Asset
	     * @func unarchive
	     * @return {Promise<Asset>} Object returned from the server with updated metadata.
	     * @example
	     * asset.unarchive()
	     * .then(asset => console.log(asset.sys))
	     */
	    unarchive: (0, _instanceActions.createUnarchiveEntity)({
	      http: http,
	      entityPath: 'assets',
	      wrapperMethod: wrapAsset
	    }),

	    /**
	     * Triggers asset processing after an upload, for the file uploaded to a specific locale.
	     * @memberof Asset
	     * @func processForLocale
	     * @param {string} locale - Locale which processing should be triggered for
	     * @param {object} options - Additional options for processing
	     * @prop {number} options.processingCheckWait - Time in milliseconds to wait before checking again if the asset has been processed (default: 500ms)
	     * @prop {number} options.processingCheckRetries - Maximum amount of times to check if the asset has been processed (default: 5)
	     * @return {Promise<Asset>} Object returned from the server with updated metadata.
	     * @throws {AssetProcessingTimeout} If the asset takes too long to process. If this happens, retrieve the asset again, and if the url property is available, then processing has succeeded. If not, your file might be damaged.
	     * @example
	     * asset.processForLocale('en-US')
	     * .then(asset => console.log(asset.fields.file['en-US'].url))
	     */
	    processForLocale: processForLocale,

	    /**
	     * Triggers asset processing after an upload, for the files uploaded to all locales of an asset.
	     * @memberof Asset
	     * @func processForAllLocales
	     * @param {object} options - Additional options for processing
	     * @prop {number} options.processingCheckWait - Time in milliseconds to wait before checking again if the asset has been processed (default: 500ms)
	     * @prop {number} options.processingCheckRetries - Maximum amount of times to check if the asset has been processed (default: 5)
	     * @return {Promise<Asset>} Object returned from the server with updated metadata.
	     * @throws {AssetProcessingTimeout} If the asset takes too long to process. If this happens, retrieve the asset again, and if the url property is available, then processing has succeeded. If not, your file might be damaged.
	     * @example
	     * asset.processForAllLocales()
	     * .then(asset => console.log(asset.fields.file['en-US'].url, asset.fields.file['de-DE'].url))
	     */
	    processForAllLocales: processForAllLocales,

	    /**
	     * Checks if the asset is published. A published asset might have unpublished changes (@see {Asset.isUpdated})
	     * @memberof Asset
	     * @func isPublished
	     * @return {boolean}
	     */
	    isPublished: (0, _instanceActions.createPublishedChecker)(),

	    /**
	     * Checks if the asset is updated. This means the asset was previously published but has unpublished changes.
	     * @memberof Asset
	     * @func isUpdated
	     * @return {boolean}
	     */
	    isUpdated: (0, _instanceActions.createUpdatedChecker)(),

	    /**
	     * Checks if the asset is in draft mode. This means it is not published.
	     * @memberof Asset
	     * @func isDraft
	     * @return {boolean}
	     */
	    isDraft: (0, _instanceActions.createDraftChecker)(),

	    /**
	     * Checks if asset is archived. This means it's not exposed to the Delivery/Preview APIs.
	     * @memberof Asset
	     * @func isArchived
	     * @return {boolean}
	     */
	    isArchived: (0, _instanceActions.createArchivedChecker)()
	  };
	}

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw asset data
	 * @return {Asset} Wrapped asset data
	 */
	function wrapAsset(http, data) {
	  var asset = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  (0, _enhanceWithMethods2.default)(asset, createAssetApi(http));
	  return (0, _freezeSys2.default)(asset);
	}

	/**
	 * @memberof Asset
	 * @typedef AssetCollection
	 * @prop {number} total
	 * @prop {number} skip
	 * @prop {number} limit
	 * @prop {Array<Asset.Asset>} items
	 * @prop {function(): Object} toPlainObject() - Returns this Asset collection as a plain JS object
	 */

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw asset collection data
	 * @return {AssetCollection} Wrapped asset collection data
	 */
	function wrapAssetCollection(http, data) {
	  var assets = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  assets.items = assets.items.map(function (entity) {
	    return wrapAsset(http, entity);
	  });
	  return (0, _freezeSys2.default)(assets);
	}

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(298), __esModule: true };

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(299);
	module.exports = __webpack_require__(6).Object.keys;

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(52)
	  , $keys    = __webpack_require__(36);

	__webpack_require__(269)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.wrapContentType = wrapContentType;
	exports.wrapContentTypeCollection = wrapContentTypeCollection;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _freezeSys = __webpack_require__(265);

	var _freezeSys2 = _interopRequireDefault(_freezeSys);

	var _enhanceWithMethods = __webpack_require__(274);

	var _enhanceWithMethods2 = _interopRequireDefault(_enhanceWithMethods);

	var _toPlainObject = __webpack_require__(273);

	var _toPlainObject2 = _interopRequireDefault(_toPlainObject);

	var _instanceActions = __webpack_require__(295);

	var _editorInterface = __webpack_require__(301);

	var _errorHandler = __webpack_require__(262);

	var _errorHandler2 = _interopRequireDefault(_errorHandler);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @memberof ContentType
	 * @typedef ContentType
	 * @prop {Meta.Sys} sys - System metadata
	 * @prop {string} name
	 * @prop {string} description
	 * @prop {string} displayField - Field used as the main display field for Entries
	 * @prop {Array<Field>} fields - All the fields contained in this Content Type
	 * @prop {function(): Object} toPlainObject() - Returns this Content Type as a plain JS object
	 */

	function createContentTypeApi(http) {
	  return {

	    /**
	     * Sends an update to the server with any changes made to the object's properties
	     * @memberof ContentType
	     * @func update
	     * @return {Promise<ContentType>} Object returned from the server with updated changes.
	     * @example
	     * contentType.name = 'New name'
	     * contentType.update()
	     * .then(contentType => console.log(contentType.name))
	     */
	    update: (0, _instanceActions.createUpdateEntity)({
	      http: http,
	      entityPath: 'content_types',
	      wrapperMethod: wrapContentType
	    }),

	    /**
	     * Deletes this object on the server.
	     * @memberof ContentType
	     * @func delete
	     * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
	     * @example
	     * contentType.delete()
	     * .catch(err => console.log(err))
	     */
	    delete: (0, _instanceActions.createDeleteEntity)({
	      http: http,
	      entityPath: 'content_types'
	    }),

	    /**
	     * Publishes the object
	     * @memberof ContentType
	     * @func publish
	     * @return {Promise<ContentType>} Object returned from the server with updated metadata.
	     * @example
	     * contentType.publish()
	     * .then(contentType => console.log(contentType.sys.publishedVersion))
	     */
	    publish: (0, _instanceActions.createPublishEntity)({
	      http: http,
	      entityPath: 'content_types',
	      wrapperMethod: wrapContentType
	    }),

	    /**
	     * Unpublishes the object
	     * @memberof ContentType
	     * @func unpublish
	     * @return {Promise<ContentType>} Object returned from the server with updated metadata.
	     * @example
	     * contentType.unpublish()
	     * .then(contentType => console.log(contentType.sys))
	     */
	    unpublish: (0, _instanceActions.createUnpublishEntity)({
	      http: http,
	      entityPath: 'content_types',
	      wrapperMethod: wrapContentType
	    }),

	    /**
	     * Gets the editor interface for the object <br />
	     * <strong>Important note</strong>: The editor interface only represent a published contentType.<br />
	     * To get the most recent representation of the contentType make sure to publish it first
	     * @memberof ContentType
	     * @func getEditorInterface
	     * @return {Promise<EditorInterface.EditorInterface>} Object returned from the server with the current editor interface.
	     * @example
	     * contentType.getEditorInterface()
	     * .then(editorInterface => console.log(editorInterface.controls))
	     */
	    getEditorInterface: function getEditorInterface() {
	      return http.get('content_types/' + this.sys.id + '/editor_interface').then(function (response) {
	        return (0, _editorInterface.wrapEditorInterface)(http, response.data);
	      }, _errorHandler2.default);
	    },
	    /**
	     * Checks if the contentType is published. A published contentType might have unpublished changes (@see {ContentType.isUpdated})
	     * @memberof ContentType
	     * @func isPublished
	     * @return {boolean}
	     */
	    isPublished: (0, _instanceActions.createPublishedChecker)(),

	    /**
	     * Checks if the contentType is updated. This means the contentType was previously published but has unpublished changes.
	     * @memberof ContentType
	     * @func isUpdated
	     * @return {boolean}
	     */
	    isUpdated: (0, _instanceActions.createUpdatedChecker)(),

	    /**
	     * Checks if the contentType is in draft mode. This means it is not published.
	     * @memberof ContentType
	     * @func isDraft
	     * @return {boolean}
	     */
	    isDraft: (0, _instanceActions.createDraftChecker)()
	  };
	}

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw content type data
	 * @return {ContentType} Wrapped content type data
	 */
	/**
	 * Content Type instances
	 * @namespace ContentType
	 */
	function wrapContentType(http, data) {
	  var contentType = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  (0, _enhanceWithMethods2.default)(contentType, createContentTypeApi(http));
	  return (0, _freezeSys2.default)(contentType);
	}

	/**
	 * @memberof ContentType
	 * @typedef ContentTypeCollection
	 * @prop {number} total
	 * @prop {number} skip
	 * @prop {number} limit
	 * @prop {Array<ContentType.ContentType>} items
	 * @prop {function(): Object} toPlainObject() - Returns this Content Type collection as a plain JS object
	 */

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw content type collection data
	 * @return {ContentTypeCollection} Wrapped content type collection data
	 */
	function wrapContentTypeCollection(http, data) {
	  var contentTypes = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  contentTypes.items = contentTypes.items.map(function (entity) {
	    return wrapContentType(http, entity);
	  });
	  return (0, _freezeSys2.default)(contentTypes);
	}

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.wrapEditorInterface = wrapEditorInterface;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _freezeSys = __webpack_require__(265);

	var _freezeSys2 = _interopRequireDefault(_freezeSys);

	var _enhanceWithMethods = __webpack_require__(274);

	var _enhanceWithMethods2 = _interopRequireDefault(_enhanceWithMethods);

	var _toPlainObject = __webpack_require__(273);

	var _toPlainObject2 = _interopRequireDefault(_toPlainObject);

	var _omit = __webpack_require__(280);

	var _omit2 = _interopRequireDefault(_omit);

	var _errorHandler = __webpack_require__(262);

	var _errorHandler2 = _interopRequireDefault(_errorHandler);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Editor Interface instances
	 * @namespace EditorInterface
	 */

	function createEditorInterfaceApi(http) {
	  return {
	    /**
	     * Sends an update to the server with any changes made to the object's properties
	     * @memberof EditorInterface
	     * @func update
	     * @return {Promise<EditorInterface>} Object returned from the server with updated changes.
	     * @example
	     * editorInterface.controls[0] = { "fieldId": "title", "widgetId": "singleLine"}
	     * editorInterface.update()
	     * .then(editorInterface => console.log(editorInterface.controls))
	     */
	    update: function update() {
	      var raw = this.toPlainObject();
	      var data = (0, _omit2.default)(raw, ['sys']);
	      return http.put('content_types/' + this.sys.contentType.sys.id + '/editor_interface', data, {
	        headers: { 'X-Contentful-Version': this.sys.version }
	      }).then(function (response) {
	        return wrapEditorInterface(http, response.data);
	      }, _errorHandler2.default);
	    },
	    /**
	     * gets a control for a specific field
	     * @memberof EditorInterface
	     * @func getControlForField
	     * @return {?Object} control object for specific field.
	     * @example
	     * const control = editorInterface.getControlForField('fieldId')
	     * console.log(control)
	     */
	    getControlForField: function getControlForField(fieldId) {
	      var result = this.controls.filter(function (control) {
	        return control.fieldId === fieldId;
	      });
	      return result && result.length > 0 ? result[0] : null;
	    }
	  };
	}

	/**
	* @private
	* @param {Object} http - HTTP client instance
	* @param {Object} data - Raw editor-interface data
	* @return {EditorInterface} Wrapped editor-interface data
	*/
	function wrapEditorInterface(http, data) {
	  var editorInterface = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  (0, _enhanceWithMethods2.default)(editorInterface, createEditorInterfaceApi(http));
	  return (0, _freezeSys2.default)(editorInterface);
	}

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.wrapLocale = wrapLocale;
	exports.wrapLocaleCollection = wrapLocaleCollection;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _freezeSys = __webpack_require__(265);

	var _freezeSys2 = _interopRequireDefault(_freezeSys);

	var _enhanceWithMethods = __webpack_require__(274);

	var _enhanceWithMethods2 = _interopRequireDefault(_enhanceWithMethods);

	var _toPlainObject = __webpack_require__(273);

	var _toPlainObject2 = _interopRequireDefault(_toPlainObject);

	var _instanceActions = __webpack_require__(295);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @memberof Locale
	 * @typedef Locale
	 * @prop {Meta.Sys} sys - System metadata
	 * @prop {string} name
	 * @prop {string} code - Locale code (example: en-us)
	 * @prop {boolean} contentDeliveryApi - If the content under this locale should be available on the CDA (for public reading)
	 * @prop {boolean} contentManagementApi - If the content under this locale should be available on the CMA (for editing)
	 * @prop {boolean} default - If this is the default locale
	 * @prop {boolean} optional - If the locale needs to be filled in on entries or not
	 * @prop {function(): Object} toPlainObject() - Returns this Locale as a plain JS object
	 */

	function createLocaleApi(http) {
	  return {
	    /**
	     * Sends an update to the server with any changes made to the object's properties
	     * @memberof Locale
	     * @func update
	     * @return {Promise<Locale>} Object returned from the server with updated changes.
	     * @example
	     * locale.name = 'English'
	     * locale.update()
	     * .then(locale => console.log(locale.name))
	     */
	    update: function update() {
	      var locale = this;
	      // this property shouldn't be sent back if it exists
	      delete locale.default;
	      delete locale.fallback_code;
	      delete locale.fallbackCode;
	      return (0, _instanceActions.createUpdateEntity)({
	        http: http,
	        entityPath: 'locales',
	        wrapperMethod: wrapLocale
	      }).call(locale);
	    },

	    /**
	     * Deletes this object on the server.
	     * @memberof Locale
	     * @func delete
	     * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
	     * @example
	     * locale.delete()
	     * .catch(err => console.log(err))
	     */
	    delete: (0, _instanceActions.createDeleteEntity)({
	      http: http,
	      entityPath: 'locales'
	    })
	  };
	}

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw locale data
	 * @return {Locale} Wrapped locale data
	 */
	function wrapLocale(http, data) {
	  delete data.internal_code;
	  var locale = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  (0, _enhanceWithMethods2.default)(locale, createLocaleApi(http));
	  return (0, _freezeSys2.default)(locale);
	}

	/**
	 * @memberof Locale
	 * @typedef LocaleCollection
	 * @prop {number} total
	 * @prop {number} skip
	 * @prop {number} limit
	 * @prop {Array<Locale.Locale>} items
	 * @prop {function(): Object} toPlainObject() - Returns this Locale collection as a plain JS object
	 */

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw locale collection data
	 * @return {LocaleCollection} Wrapped locale collection data
	 */
	function wrapLocaleCollection(http, data) {
	  var locales = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  locales.items = locales.items.map(function (entity) {
	    return wrapLocale(http, entity);
	  });
	  return (0, _freezeSys2.default)(locales);
	}

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.wrapWebhook = wrapWebhook;
	exports.wrapWebhookCollection = wrapWebhookCollection;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _freezeSys = __webpack_require__(265);

	var _freezeSys2 = _interopRequireDefault(_freezeSys);

	var _enhanceWithMethods = __webpack_require__(274);

	var _enhanceWithMethods2 = _interopRequireDefault(_enhanceWithMethods);

	var _toPlainObject = __webpack_require__(273);

	var _toPlainObject2 = _interopRequireDefault(_toPlainObject);

	var _errorHandler = __webpack_require__(262);

	var _errorHandler2 = _interopRequireDefault(_errorHandler);

	var _instanceActions = __webpack_require__(295);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @memberof Webhook
	 * @typedef Webhook
	 * @prop {Meta.Sys} sys - System metadata
	 * @prop {string} name
	 * @prop {string} url - Url which the webhook will call
	 * @prop {string} httpBasicUsername - Username for basic HTTP authentication
	 * @prop {string} httpBasicPassword - Password for basic HTTP authentication
	 * @prop {object} headers - Key value pairs of additional headers to be sent with every webhook call.
	 * @prop {array} topics - Topics which this webhook should be subscribed to. See https://www.contentful.com/developers/docs/references/content-management-api/#/reference/webhooks/create-a-webhook for more details
	 * @prop {function(): Object} toPlainObject() - Returns this Webhook as a plain JS object
	 */

	/**
	 * Webhook instances
	 * @namespace Webhook
	 */
	function createWebhookApi(http) {
	  return {

	    /**
	     * Sends an update to the server with any changes made to the object's properties
	     * @memberof Webhook
	     * @func update
	     * @return {Promise<Webhook>} Object returned from the server with updated changes.
	     * @example
	     * webhook.name = 'New name'
	     * webhook.update()
	     * .then(webhook => console.log(webhook.name))
	     */
	    update: (0, _instanceActions.createUpdateEntity)({
	      http: http,
	      entityPath: 'webhook_definitions',
	      wrapperMethod: wrapWebhook
	    }),

	    /**
	     * Deletes this object on the server.
	     * @memberof Webhook
	     * @func delete
	     * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
	     * @example
	     * webhook.delete()
	     * .catch(err => console.log(err))
	     */
	    delete: (0, _instanceActions.createDeleteEntity)({
	      http: http,
	      entityPath: 'webhook_definitions'
	    }),

	    /**
	     * List of the most recent webhook calls. See https://www.contentful.com/developers/docs/references/content-management-api/#/reference/webhook-calls/webhook-call-overviews for more details.
	     * @memberof Webhook
	     * @func getCalls
	     * @return {Promise<object>} Promise for list of calls
	     * @example
	     * webhook.getCalls()
	     * .then(calls => console.log(calls.items))
	     */
	    getCalls: function getCalls() {
	      return http.get('webhooks/' + this.sys.id + '/calls').then(function (response) {
	        return response.data;
	      }, _errorHandler2.default);
	    },

	    /**
	     * Webhook call with specific id. See https://www.contentful.com/developers/docs/references/content-management-api/#/reference/webhook-calls/webhook-call-overviews for more details
	     * @memberof Webhook
	     * @func getCalls
	     * @return {Promise<object>} Promise for call details
	     * @example
	     * webhook.getCall('kjsdk1jeasd')
	     * .then(call => console.log(call))
	     */
	    getCall: function getCall(id) {
	      return http.get('webhooks/' + this.sys.id + '/calls/' + id).then(function (response) {
	        return response.data;
	      }, _errorHandler2.default);
	    },

	    /**
	     * Overview of the health of webhook calls. See https://www.contentful.com/developers/docs/references/content-management-api/#/reference/webhook-calls/webhook-call-overviews for more details.
	     * @memberof Webhook
	     * @func getHealth
	     * @return {Promise<object>} Promise for health info
	     * @example
	     * webhook.getHealth()
	     * .then(health => console.log(health))
	     */
	    getHealth: function getHealth() {
	      return http.get('webhooks/' + this.sys.id + '/health').then(function (response) {
	        return response.data;
	      }, _errorHandler2.default);
	    }
	  };
	}

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw webhook data
	 * @return {Webhook} Wrapped webhook data
	 */
	function wrapWebhook(http, data) {
	  var webhook = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  (0, _enhanceWithMethods2.default)(webhook, createWebhookApi(http));
	  return (0, _freezeSys2.default)(webhook);
	}

	/**
	 * @memberof Webhook
	 * @typedef WebhookCollection
	 * @prop {number} total
	 * @prop {number} skip
	 * @prop {number} limit
	 * @prop {Array<Webhook.Webhook>} items
	 * @prop {function(): Object} toPlainObject() - Returns this Webhook collection as a plain JS object
	 */

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw webhook collection data
	 * @return {WebhookCollection} Wrapped webhook collection data
	 */
	function wrapWebhookCollection(http, data) {
	  var webhooks = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  webhooks.items = webhooks.items.map(function (entity) {
	    return wrapWebhook(http, entity);
	  });
	  return (0, _freezeSys2.default)(webhooks);
	}

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.wrapSpaceMembership = wrapSpaceMembership;
	exports.wrapSpaceMembershipCollection = wrapSpaceMembershipCollection;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _freezeSys = __webpack_require__(265);

	var _freezeSys2 = _interopRequireDefault(_freezeSys);

	var _enhanceWithMethods = __webpack_require__(274);

	var _enhanceWithMethods2 = _interopRequireDefault(_enhanceWithMethods);

	var _toPlainObject = __webpack_require__(273);

	var _toPlainObject2 = _interopRequireDefault(_toPlainObject);

	var _instanceActions = __webpack_require__(295);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @memberof SpaceMembership
	 * @typedef SpaceMembership
	 * @prop {Meta.Sys} sys - System metadata
	 * @prop {string} name
	 * @prop {boolean} admin - User is an admin
	 * @prop {array} roles - Array of Role Links
	 * @prop {function(): Object} toPlainObject() - Returns this Space Membership as a plain JS object
	 */

	function createSpaceMembershipApi(http) {
	  return {

	    /**
	     * Sends an update to the server with any changes made to the object's properties
	     * @memberof SpaceMembership
	     * @func update
	     * @return {Promise<SpaceMembership>} Object returned from the server with updated changes.
	     * @example
	     * spaceMembership.name = 'New name'
	     * spaceMembership.update()
	     * .then(spaceMembership => console.log(spaceMembership.name))
	     */
	    update: (0, _instanceActions.createUpdateEntity)({
	      http: http,
	      entityPath: 'space_memberships',
	      wrapperMethod: wrapSpaceMembership
	    }),

	    /**
	     * Deletes this object on the server.
	     * @memberof SpaceMembership
	     * @func delete
	     * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
	     * @example
	     * spaceMembership.delete()
	     * .catch(err => console.log(err))
	     */
	    delete: (0, _instanceActions.createDeleteEntity)({
	      http: http,
	      entityPath: 'space_memberships'
	    })
	  };
	}

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw space membership data
	 * @return {SpaceMembership} Wrapped space membership data
	 */
	/**
	 * Space Membership instances
	 * @namespace SpaceMembership
	 */
	function wrapSpaceMembership(http, data) {
	  var spaceMembership = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  (0, _enhanceWithMethods2.default)(spaceMembership, createSpaceMembershipApi(http));
	  return (0, _freezeSys2.default)(spaceMembership);
	}

	/**
	 * @memberof SpaceMembership
	 * @typedef SpaceMembershipCollection
	 * @prop {number} total
	 * @prop {number} skip
	 * @prop {number} limit
	 * @prop {Array<SpaceMembership.SpaceMembership>} items
	 * @prop {function(): Object} toPlainObject() - Returns this Space Membership collection as a plain JS object
	 */

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw space membership collection data
	 * @return {SpaceMembershipCollection} Wrapped space membership collection data
	 */
	function wrapSpaceMembershipCollection(http, data) {
	  var spaceMemberships = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  spaceMemberships.items = spaceMemberships.items.map(function (entity) {
	    return wrapSpaceMembership(http, entity);
	  });
	  return (0, _freezeSys2.default)(spaceMemberships);
	}

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.wrapRole = wrapRole;
	exports.wrapRoleCollection = wrapRoleCollection;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _freezeSys = __webpack_require__(265);

	var _freezeSys2 = _interopRequireDefault(_freezeSys);

	var _enhanceWithMethods = __webpack_require__(274);

	var _enhanceWithMethods2 = _interopRequireDefault(_enhanceWithMethods);

	var _toPlainObject = __webpack_require__(273);

	var _toPlainObject2 = _interopRequireDefault(_toPlainObject);

	var _instanceActions = __webpack_require__(295);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * See https://www.contentful.com/developers/docs/references/content-management-api/#/reference/roles/create-a-role
	 * @memberof Role
	 * @typedef Role
	 * @prop {Meta.Sys} sys - System metadata
	 * @prop {string} name
	 * @prop {object} permissions - Permissions for application sections
	 * @prop {object} policies
	 * @prop {function(): Object} toPlainObject() - Returns this Role as a plain JS object
	 */

	function createRoleApi(http) {
	  return {

	    /**
	     * Sends an update to the server with any changes made to the object's properties
	     * @memberof Role
	     * @func update
	     * @return {Promise<Role>} Object returned from the server with updated changes.
	     * @example
	     * role.name = 'New name'
	     * role.update()
	     * .then(role => console.log(role.name))
	     */
	    update: (0, _instanceActions.createUpdateEntity)({
	      http: http,
	      entityPath: 'roles',
	      wrapperMethod: wrapRole
	    }),

	    /**
	     * Deletes this object on the server.
	     * @memberof Role
	     * @func delete
	     * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
	     * @example
	     * role.delete()
	     * .catch(err => console.log(err))
	     */
	    delete: (0, _instanceActions.createDeleteEntity)({
	      http: http,
	      entityPath: 'roles'
	    })
	  };
	}

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw role data
	 * @return {Role} Wrapped role data
	 */
	/**
	 * Role instances
	 * @namespace Role
	 */
	function wrapRole(http, data) {
	  var role = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  (0, _enhanceWithMethods2.default)(role, createRoleApi(http));
	  return (0, _freezeSys2.default)(role);
	}

	/**
	 * @memberof Role
	 * @typedef RoleCollection
	 * @prop {number} total
	 * @prop {number} skip
	 * @prop {number} limit
	 * @prop {Array<Role.Role>} items
	 * @prop {function(): Object} toPlainObject() - Returns this Role collection as a plain JS object
	 */

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw role collection data
	 * @return {RoleCollection} Wrapped role collection data
	 */
	function wrapRoleCollection(http, data) {
	  var roles = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  roles.items = roles.items.map(function (entity) {
	    return wrapRole(http, entity);
	  });
	  return (0, _freezeSys2.default)(roles);
	}

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.wrapApiKey = wrapApiKey;
	exports.wrapApiKeyCollection = wrapApiKeyCollection;

	var _cloneDeep = __webpack_require__(132);

	var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

	var _freezeSys = __webpack_require__(265);

	var _freezeSys2 = _interopRequireDefault(_freezeSys);

	var _enhanceWithMethods = __webpack_require__(274);

	var _enhanceWithMethods2 = _interopRequireDefault(_enhanceWithMethods);

	var _toPlainObject = __webpack_require__(273);

	var _toPlainObject2 = _interopRequireDefault(_toPlainObject);

	var _instanceActions = __webpack_require__(295);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * @memberof ApiKey
	 * @typedef ApiKey
	 * @prop {Meta.Sys} sys - System metadata
	 * @prop {string} name
	 * @prop {string} description
	 * @prop {function(): Object} toPlainObject() - Returns this Api Key as a plain JS object
	 */

	function createApiKeyApi(http) {
	  return {

	    /**
	     * Sends an update to the server with any changes made to the object's properties
	     * @memberof ApiKey
	     * @func update
	     * @return {Promise<ApiKey>} Object returned from the server with updated changes.
	     * @example
	     * apiKey.name = 'New name'
	     * apiKey.update()
	     * .then(apiKey => console.log(apiKey.name))
	     */
	    update: (0, _instanceActions.createUpdateEntity)({
	      http: http,
	      entityPath: 'api_keys',
	      wrapperMethod: wrapApiKey
	    }),

	    /**
	     * Deletes this object on the server.
	     * @memberof ApiKey
	     * @func delete
	     * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.
	     * @example
	     * apiKey.delete()
	     * .catch(err => console.log(err))
	     */
	    delete: (0, _instanceActions.createDeleteEntity)({
	      http: http,
	      entityPath: 'api_keys'
	    })
	  };
	}

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw api key data
	 * @return {ApiKey} Wrapped api key data
	 */
	/**
	 * Api Key instances
	 * @namespace ApiKey
	 */
	function wrapApiKey(http, data) {
	  var apiKey = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  (0, _enhanceWithMethods2.default)(apiKey, createApiKeyApi(http));
	  return (0, _freezeSys2.default)(apiKey);
	}

	/**
	 * @memberof ApiKey
	 * @typedef ApiKeyCollection
	 * @prop {number} total
	 * @prop {number} skip
	 * @prop {number} limit
	 * @prop {Array<ApiKey.ApiKey>} items
	 * @prop {function(): Object} toPlainObject() - Returns this Api Key collection as a plain JS object
	 */

	/**
	 * @private
	 * @param {Object} http - HTTP client instance
	 * @param {Object} data - Raw api key collection data
	 * @return {ApiKeyCollection} Wrapped api key collection data
	 */
	function wrapApiKeyCollection(http, data) {
	  var apiKeys = (0, _toPlainObject2.default)((0, _cloneDeep2.default)(data));
	  apiKeys.items = apiKeys.items.map(function (entity) {
	    return wrapApiKey(http, entity);
	  });
	  return (0, _freezeSys2.default)(apiKeys);
	}

/***/ }
/******/ ]);